meta:
  id: "250131-tasks-hierarchy-drag-and-display"
  title: "任务层级拖拽与展示设计"
  status: draft
  owner: "AI Assistant"
  created: "2025-01-31"
  version: "1.0"

background:
  problem: |
    当前任务管理存在以下问题：
    1. 用户无法通过拖拽将任务组织成层级结构（父子关系）
    2. 在 Inbox 中，任务之间的层级关系无法展示
    3. 在 Tasks 中，子任务的截止时间可能早于父任务，导致层级关系与时间排序的矛盾
    4. 用户无法快速将子任务从父任务中移除或移动到其他父任务下
    5. 任务层级结构缺乏清晰的视觉展示，用户难以理解任务的组织关系

  goal: |
    通过实现任务层级拖拽和智能展示，提升任务组织效率：
    1. 支持拖拽任务到其他任务上，建立父子关系
    2. Inbox 使用手风琴模式展示层级结构，同一时间只展开一个父任务
    3. Tasks 采用"父任务跟随子任务"策略，解决时间排序与层级关系的矛盾
    4. 支持拖拽子任务离开父任务或移动到其他父任务下
    5. 通过视觉层级指示和简化父任务展示，清晰呈现任务组织结构
    6. 最多支持 3 级任务层级（不含里程碑和项目）

user_flows:
  - name: "拖拽任务成为子任务（Inbox）"
    steps:
      - "用户在 Inbox 页面长按任务 A 开始拖拽"
      - "将任务 A 拖到任务 B 上，任务 B 变色高亮（DragTarget 原生效果）"
      - "在任务 B 上放手，任务 A 成为任务 B 的子任务"
      - "系统更新任务 A 的 parentId 为任务 B 的 id"
      - "Inbox 页面刷新，任务 B 可以展开显示子任务 A"

  - name: "拖拽任务成为子任务（Tasks）"
    steps:
      - "用户在 Tasks 页面长按'今天'区域的任务 A 开始拖拽"
      - "将任务 A 拖到'下周'区域的任务 B 上，任务 B 变色高亮"
      - "在任务 B 上放手，任务 A 成为任务 B 的子任务"
      - "系统更新任务 A 的 parentId 为任务 B 的 id"
      - "由于父任务跟随子任务，任务 B 也出现在'今天'区域"
      - "任务 B 显示为简化的父任务标题，下方显示子任务 A（完整功能）"

  - name: "Inbox 层级展示（手风琴模式）"
    steps:
      - "用户在 Inbox 页面看到任务列表"
      - "有子任务的任务以 ExpansionPanel 形式展示，默认收起"
      - "用户点击父任务标题展开，显示子任务列表"
      - "同一时间只能展开一个父任务（手风琴效果）"
      - "展开的父任务下方显示所有子任务，子任务支持嵌套显示（多层）"

  - name: "Tasks 层级展示（父任务跟随子任务）"
    steps:
      - "用户查看'今天'区域，看到任务 A（今天截止）"
      - "任务 A 有父任务 B（下周截止）和祖任务 C（下月截止）"
      - "系统在'今天'区域显示：祖任务 C（简化标题）→ 父任务 B（简化标题）→ 任务 A（完整功能）"
      - "用户可以看到完整的任务层级路径"
      - "用户点击父任务或祖任务的'跳转'按钮，跳转到该任务所在的区域"

  - name: "查看父任务的其他子任务"
    steps:
      - "用户在'今天'区域看到父任务 B 和子任务 A"
      - "父任务 B 还有子任务 C（在'下周'区域）"
      - "用户点击父任务 B 的'显示其他子任务'按钮"
      - "展开显示子任务列表：子任务 C（下周截止）"
      - "只显示一级子任务，不递归显示子任务的子任务"

  - name: "父任务在自己区域的展示（Tasks）"
    steps:
      - "用户查看'下周'区域，看到父任务 B（下周截止）"
      - "父任务 B 显示为完整的任务卡片，具备所有普通任务功能"
      - "用户点击父任务 B 的'显示全部子任务'按钮"
      - "展开显示所有子任务的列表（标题/截止日期/任务状态）"
      - "子任务列表不可编辑，只用于查看"

  - name: "拖拽子任务离开父任务"
    steps:
      - "用户在 Tasks 页面看到父任务 B 和子任务 A"
      - "用户长按子任务 A 开始拖拽"
      - "将子任务 A 拖到区域外的空白处或特定的'移除父任务'区域"
      - "放手后，系统移除任务 A 的 parentId（设为 null）"
      - "任务 A 成为独立任务，保持原有的截止时间"

  - name: "拖拽子任务移动到其他父任务"
    steps:
      - "用户在 Tasks 页面看到父任务 B 和子任务 A"
      - "用户长按子任务 A 开始拖拽"
      - "将子任务 A 拖到任务 C 上，任务 C 变色高亮"
      - "在任务 C 上放手，系统更新任务 A 的 parentId 为任务 C 的 id"
      - "任务 A 从父任务 B 下移除，出现在任务 C 下"

ui_behavior:
  layout: |
    Inbox 页面布局：
    ┌─────────────────────────────────────┐
    │ [父任务 A]                    [▼]    │ ← ExpansionPanel，默认收起
    │   └─ 子任务 A1（完整功能）           │ ← 展开后显示子任务
    │   └─ 子任务 A2（完整功能）           │
    │                                     │
    │ [父任务 B]                    [▼]    │ ← 手风琴：只能展开一个
    │                                     │
    │ [任务 C]                            │ ← 无子任务，直接显示
    └─────────────────────────────────────┘
    
    Tasks 页面布局（今天区域 - 父任务跟随子任务）：
    ┌─────────────────────────────────────┐
    │ [祖任务 C] [跳转]                    │ ← 简化标题，浅色显示（不含项目/里程碑）
    │   └─ [父任务 B] [跳转] [显示全部子任务]│ ← 简化标题，浅色显示（不含项目/里程碑）
    │       └─ 任务 A（完整功能）          │ ← 完整任务卡片
    │                                     │
    │ [父任务 D] [跳转] [显示全部子任务]    │ ← 简化标题，浅色显示（不含项目/里程碑）
    │   └─ 任务 E（完整功能）              │
    │   └─ 任务 F（完整功能）              │
    └─────────────────────────────────────┘
    
    Tasks 页面布局（下周区域 - 父任务自己的区域）：
    ┌─────────────────────────────────────┐
    │ [父任务 B]（完整功能）[显示全部子任务]│ ← 完整任务卡片，和普通任务一样
    │   └─ 展开的子任务列表：              │
    │       • 任务 A（今天截止）[列入清单]  │ ← 标题/截止日期/状态
    │       • 任务 C（下周截止）[列入清单]  │
    │       • 任务 D（已完成）             │
    └─────────────────────────────────────┘

  components:
    - name: "TaskTileContent（Inbox & Tasks 共用）"
      purpose: "任务卡片内容，包裹 DragTarget 支持拖拽成为子任务"
      interactions: ["拖拽到其他任务上", "接受拖拽", "变色高亮反馈"]
      design:
        - "外层包裹 DragTarget<Task>"
        - "拖拽悬停时，目标任务背景变色（使用 theme.primaryContainer.withOpacity(0.3)）"
        - "支持拖拽检查：不能拖到自己、不能拖到子任务（避免循环引用）"
        - "支持锁定检查：被锁定的任务不能成为父任务或移动"
        - "排除项目和里程碑：不能将任务拖到项目或里程碑上成为子任务"
    
    - name: "InboxTaskList"
      purpose: "Inbox 任务列表，支持手风琴模式展示层级"
      interactions: ["展开/收起父任务", "手风琴模式（同一时间只展开一个）"]
      design:
        - "使用 ExpansionPanelList.radio 实现手风琴效果"
        - "父任务标题作为 ExpansionPanel header（不含项目/里程碑）"
        - "子任务列表作为 ExpansionPanel body"
        - "支持嵌套显示多级子任务"
    
    - name: "ParentTaskHeader（Tasks - 跟随子任务位置）"
      purpose: "父任务简化标题，只在 Tasks 页面跟随子任务的位置使用"
      interactions: ["跳转到父任务区域", "显示全部子任务", "纯展示不可点击"]
      design:
        - "只显示任务标题（截断显示，hover 显示完整）"
        - "使用较浅颜色（theme.surfaceContainerHighest）突出子任务"
        - "左侧显示层级 icon（不用数字/字母）"
        - "右侧显示'跳转'按钮和'显示全部子任务'按钮（如果有子任务）"
        - "始终展开状态，不提供收起功能"
        - "排除项目和里程碑：只显示普通任务的父任务"
    
    - name: "ParentTaskInOwnSection（Tasks - 父任务自己的区域）"
      purpose: "父任务在自己截止日期区域的完整展示"
      interactions: ["完整任务功能", "显示全部子任务", "所有正常交互"]
      design:
        - "父任务显示为完整的任务卡片，具备所有普通任务功能"
        - "提供'显示全部子任务'按钮（如果有子任务）"
        - "点击按钮展开显示所有子任务的不可编辑列表"
        - "子任务列表显示：标题/截止日期（如果有）/任务状态"
        - "任务状态包括：收集箱（inbox）/列入清单（pending）/已完成（completedActive）/已归档（archived）/丢弃到回收站（trashed）"
        - "伪删除状态（trashed）的子任务不显示在列表中"
        - "子任务列表只显示一级，不递归显示子任务的子任务"
    
    - name: "AncestorTaskChain（Tasks）"
      purpose: "递归显示祖先任务链（祖任务 → 父任务 → 当前任务）"
      interactions: ["递归展示", "最多 3 级", "每级都有跳转按钮"]
      design:
        - "从当前任务向上递归查找父任务"
        - "排除里程碑和项目类型的父任务"
        - "形成祖任务 → 父任务 → 当前任务的视觉链"
        - "每级都有独立的跳转按钮"
    
    - name: "AllChildrenList（Tasks）"
      purpose: "显示父任务的所有子任务列表（不可编辑）"
      interactions: ["展开/收起", "查看子任务信息", "不可编辑"]
      design:
        - "点击'显示全部子任务'按钮展开"
        - "显示所有子任务的列表（只显示一级，不递归）"
        - "每个子任务显示：标题、截止日期（如果有）、任务状态"
        - "任务状态显示：收集箱/列入清单/已完成/已归档/丢弃到回收站"
        - "伪删除状态（trashed）的子任务不显示"
        - "列表不可编辑，只用于查看"
        - "子任务可以点击跳转到对应区域（如果有截止日期）或 Inbox（如果是收集箱状态）"
    
    - name: "DragToRemove（Tasks & Inbox）"
      purpose: "拖拽子任务离开父任务"
      interactions: ["拖到空白处", "移除父子关系", "保持截止时间"]
      design:
        - "子任务可以拖拽到区域外的空白处"
        - "或拖到特定的'移除父任务'占位区域"
        - "移除 parentId，任务成为独立任务"
        - "不改变任务的截止时间和其他属性"

  states:
    - condition: "拖拽悬停在任务上"
      appearance: "目标任务背景变色（theme.primaryContainer.withOpacity(0.3)），提供清晰的拖拽反馈"
    
    - condition: "任务有子任务（Inbox）"
      appearance: "显示为 ExpansionPanel，默认收起，可展开显示子任务列表"
    
    - condition: "任务有子任务（Tasks - 跟随子任务位置）"
      appearance: "父任务以简化标题形式出现在子任务所在区域，始终展开"
    
    - condition: "父任务有自己的截止日期（Tasks - 父任务自己的区域）"
      appearance: "父任务显示为完整任务卡片，具备所有正常功能，并提供'显示全部子任务'按钮"
    
    - condition: "父任务有多个子任务在不同区域"
      appearance: "父任务出现在所有包含子任务的区域（简化标题），也在自己的区域显示（完整功能）"
    
    - condition: "展开显示全部子任务"
      appearance: "显示所有子任务的不可编辑列表（标题/截止日期/状态），伪删除状态不显示"
    
    - condition: "任务是第三级"
      appearance: "不能拖拽到其他任务上成为子任务（最多 3 级）"
    
    - condition: "任务被锁定"
      appearance: "不能成为父任务（不能接受子任务），不能移动（不能成为子任务）"
    
    - condition: "任务是项目或里程碑"
      appearance: "不能作为父任务显示在层级链中，也不接受普通任务成为子任务"

business_rules:
  # 层级限制
  - "最多支持 3 级任务层级（不含里程碑和项目）"
  - "第三级任务不能添加子任务（拖拽时禁用或提示错误）"
  - "里程碑和项目不计入层级深度，也不作为父任务显示在层级链中"
  - "不能将任务拖到项目或里程碑上成为子任务"
  
  # 拖拽规则
  - "不能将任务拖到自己上（避免无效操作）"
  - "不能将任务拖到自己的子任务上（避免循环引用）"
  - "不能将任务拖到被锁定的任务上（被锁定的任务不能成为父任务）"
  - "被锁定的任务不能移动（不能成为其他任务的子任务）"
  - "不能将任务拖到项目或里程碑上"
  
  # 展示规则（Inbox）
  - "Inbox 所有任务都没有截止日期（选择截止日期会自动加入 Tasks）"
  - "按 sortIndex 正常排序展示"
  - "使用手风琴模式，同一时间只展开一个父任务"
  - "支持嵌套显示多级子任务"
  - "父任务展示不含项目和里程碑"
  
  # 展示规则（Tasks - 跟随子任务位置）
  - "父任务跟随子任务：父任务出现在所有包含子任务的区域"
  - "每个区域只显示该区域的子任务"
  - "父任务只显示标题，使用较浅颜色，突出子任务"
  - "父任务始终展开，不提供收起功能"
  - "递归显示祖先任务链（祖任务 → 父任务 → 当前任务），最多 3 级"
  - "排除项目和里程碑：只显示普通任务的父任务和祖先任务"
  - "父任务标题可以截断显示，hover 显示完整标题"
  
  # 展示规则（Tasks - 父任务自己的区域）
  - "父任务在自己的截止日期区域显示为完整的任务卡片"
  - "父任务具备所有普通任务的功能（编辑、拖拽、滑动操作等）"
  - "父任务提供'显示全部子任务'按钮（如果有子任务）"
  - "展开显示所有子任务的不可编辑列表"
  - "子任务列表显示：标题/截止日期（如果有）/任务状态"
  - "任务状态包括：收集箱（inbox）/列入清单（pending）/已完成（completedActive）/已归档（archived）/丢弃到回收站（trashed）"
  - "伪删除状态（trashed）的子任务不显示在列表中"
  - "子任务列表只显示一级，不递归显示子任务的子任务"
  
  # 视觉层级
  - "使用层级 icon 表示层级关系（不用数字/字母）"
  - "不使用字体大小区分层级（避免传统'上级字更大'的认知）"
  - "父任务标题可以截断显示，hover 显示完整标题"
  
  # 交互规则
  - "父任务标题（跟随子任务位置）不点击跳转，提供独立的跳转按钮"
  - "跳转按钮点击后跳转到父任务所在的时间区域"
  - "同一区域的多个子任务，父任务标题只显示一次"
  - "拖拽子任务可以移出父任务，也可以加入到其他任务"
  - "子任务列表中的项目可以点击跳转到对应区域或 Inbox"

technical_constraints:
  - "DragTarget 的原生变色功能需要启用（当前可能被禁用）"
  - "需要检查任务的 canEditStructure 属性判断是否锁定"
  - "需要递归检查循环引用（不能拖到子任务）"
  - "需要查询任务的子任务列表来计算 sortIndex"
  - "需要过滤出根任务（parentId == null 或父任务不在当前列表）"
  - "ExpansionPanelList.radio 不支持 ReorderableListView，需要调整拖拽排序实现"
  - "需要从 theme 中获取颜色，不能硬编码"

success_criteria:
  - "用户可以拖拽任务到其他任务上建立父子关系"
  - "拖拽时目标任务正确变色，提供清晰的视觉反馈"
  - "Inbox 正确展示任务层级，手风琴模式正常工作"
  - "Tasks 正确展示'父任务跟随子任务'的层级结构"
  - "父任务正确显示在包含子任务的所有区域"
  - "递归显示祖先任务链，最多 3 级"
  - "用户可以查看父任务的其他子任务"
  - "用户可以拖拽子任务离开父任务"
  - "用户可以拖拽子任务移动到其他父任务"
  - "第三级任务不能添加子任务"
  - "循环引用检查有效防止错误操作"
  - "锁定检查有效防止无效操作"

design_decisions:
  # 为什么父任务跟随子任务？
  - decision: "Tasks 页面采用'父任务跟随子任务'策略"
    rationale: |
      解决了时间排序与层级关系的矛盾：
      - 子任务的截止时间可能早于父任务
      - 如果按父任务的截止时间排序，用户会错过今天要完成的子任务
      - 父任务跟随子任务，确保重要任务不会被埋没
    trade_off: |
      缺点：父任务可能在多个区域重复出现（简化标题）
      优点：保证任务提醒的有效性，层级关系清晰
  
  # 为什么父任务在自己区域显示完整功能？
  - decision: "父任务在自己的截止日期区域显示完整功能"
    rationale: |
      - 父任务本身也是一个任务，需要可以正常操作
      - 用户可能需要在父任务自己的区域查看和编辑父任务
      - 提供'显示全部子任务'按钮，方便查看所有子任务的状态
    trade_off: |
      缺点：父任务在两个位置显示（简化标题 + 完整功能）
      优点：既保证了层级关系的可见性，又保证了父任务的可操作性
  
  # 为什么排除项目和里程碑？
  - decision: "层级展示排除项目和里程碑"
    rationale: |
      - 项目和里程碑有自己专门的展示方式
      - 普通任务的层级不应该被项目和里程碑打断
      - 保持层级展示的简洁性和一致性
    trade_off: |
      缺点：如果任务属于项目或里程碑，层级链会被截断
      优点：保持层级展示的清晰，避免混乱
  
  # 为什么父任务只显示标题？
  - decision: "父任务只显示标题，不显示其他内容"
    rationale: |
      - 父任务在这里主要起组织结构作用
      - 子任务才是用户实际需要操作的任务
      - 简化父任务展示，突出子任务
    trade_off: |
      缺点：无法在父任务层级直接查看和编辑父任务详情
      优点：界面清晰，突出重要信息（子任务）
  
  # 为什么最多 3 级？
  - decision: "最多支持 3 级任务层级"
    rationale: |
      - 层级过深会导致界面复杂，难以理解
      - 3 级已经足够组织大部分任务场景
      - 里程碑和项目不计入层级深度，保证灵活性
    trade_off: |
      缺点：极端情况下可能不够用
      优点：保持界面简洁，避免过度嵌套

open_issues:
  - question: "层级 icon 的具体设计方案？"
    options:
      - "使用 Material Icons 中的层级相关图标（如 subdirectory_arrow_right）"
      - "使用自定义的层级指示图标（如连接线风格的图标）"
      - "使用缩进 + 简单符号组合"
    suggestion: "需要查看 Material Icons 库，选择风格一致的层级指示图标"
  
  - question: "拖拽子任务离开父任务的交互方式？"
    options:
      - "拖到区域外的空白处"
      - "提供'移除父任务'的占位区域"
      - "长按菜单提供'移除父任务'选项"
    suggestion: "建议：拖到空白处 + 提供明确的视觉反馈"
  
  - question: "父任务的'跳转'按钮样式？"
    options:
      - "图标按钮（如 open_in_new）"
      - "文字按钮（如'查看完整任务'）"
      - "图标+文字组合"
    suggestion: "建议：图标按钮，与'显示其他子任务'按钮样式一致"
  
  - question: "第三级任务的拖拽限制如何表现？"
    options:
      - "视觉禁用（拖拽时显示禁止图标）"
      - "允许拖拽但接受时提示错误"
      - "隐藏'成为子任务'选项"
    suggestion: "建议：视觉禁用 + 接受时提示错误，给用户明确反馈"
  
  - question: "父任务颜色从 theme 中选哪个？"
    options:
      - "Theme.colorScheme.surfaceContainerHighest（较浅）"
      - "Theme.colorScheme.surfaceVariant（更浅）"
      - "其他 theme 颜色"
    suggestion: "建议：surfaceContainerHighest，提供足够的对比度但不过于突出"
  
  - question: "同一区域多个子任务时，父任务标题的位置？"
    options:
      - "所有子任务上方，作为分组标题"
      - "第一个子任务上方，其他子任务紧跟在后面"
    suggestion: "建议：所有子任务上方，作为分组标题，视觉上更清晰"

dependencies:
  - "TaskTileContent 组件需要支持 DragTarget"
  - "TaskHierarchyService.moveToParent 方法"
  - "TaskRepository.listChildren 方法"
  - "collectRoots 工具函数（已存在）"
  - "ExpansionPanelList.radio 组件"
  - "Theme 颜色系统"
  - "Material Icons 库"

risks:
  - "ExpansionPanelList 不支持 ReorderableListView，可能需要调整拖拽排序实现"
  - "递归显示祖先任务可能影响性能（需要多次查询）"
  - "父任务在多个区域重复出现可能导致用户困惑"
  - "循环引用检查需要递归查询，可能影响性能"
  - "拖拽交互的视觉反馈需要精细调整"

next_steps:
  - "确认设计文档内容"
  - "创建对应的迭代蓝图文档（iteration blueprint）"
  - "选择合适的层级 icon 方案"
  - "实现 TaskTileContent 的 DragTarget 包裹"
  - "实现 Inbox 的手风琴模式展示"
  - "实现 Tasks 的'父任务跟随子任务'展示逻辑"
  - "实现拖拽离开父任务功能"
  - "实现循环引用检查"
  - "实现第三级任务限制"
  - "添加视觉反馈和错误提示"
