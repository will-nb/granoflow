version: 1
language: dart
framework: flutter
policy:
  selection: "first-applicable-by-priority"
  conflict_resolution: "prefer-less-invasive"
  safety:
    - "require-tests-or-snapshot-golden"
    - "wrap-with-feature-flag-for-risky-changes"
    - "log-before-after-metrics: build_time,rebuilds,frame_budget,allocs"

rules:
  - smell: Duplicated Code
    alias: [duplicate code, copy-paste, DRY violation]
    detect:
      - "two+ functions share ≥6 identical/similar lines"
      - "two+ widgets differ only by minor style or child"
    refactorings:
      - name: "Extract Function"
      - name: "Extract Widget"
      - name: "Extract Class"
      - name: "Pull Up Method (to mixin/base)"
      - name: "Introduce Parameter Object"
    notes.dart: "可用顶层函数或扩展方法；公共逻辑放到 utils/mixins。"
    notes.flutter: "重复布局提取为 StatelessWidget/Reusable Builder。"
    safety: ["add-widget-goldens-if-ui"]

  - smell: Long Method
    alias: [long function, lengthy build]
    detect:
      - "function >40 lines"
      - "build() contains 3+ responsibilities"
    refactorings:
      - name: "Extract Function"
      - name: "Extract Widget (compose UI)"
      - name: "Introduce Explaining Variable"
      - name: "Guard Clauses (early return)"
    notes.flutter: "将子树拆成小部件可减少不必要重建。"

  - smell: Long Class (God Object)
    alias: [god object, too many fields]
    detect:
      - "class >400 lines or >15 fields"
      - "handles UI+state+network together"
    refactorings:
      - name: "Extract Class (split concerns)"
      - name: "Move Method/Field to proper layer"
      - name: "Introduce Interface (narrow)"
    notes.flutter: "页面Widget只负责展示；业务放Service/Notifier。"

  - smell: Feature Envy
    detect:
      - "method heavily uses another type’s fields/methods"
    refactorings:
      - name: "Move Method"
      - name: "Extract Class"
      - name: "Introduce Domain Service"
    notes.dart: "倾向把行为放到拥有数据的一侧或 Service。"

  - smell: Data Clumps
    alias: [parameter clumps]
    detect:
      - "≥3 params总是成组出现"
    refactorings:
      - name: "Introduce Parameter Object"
      - name: "Preserve Whole Object"
      - name: "Encapsulate Record (value class)"
    notes.dart: "用 freezed/records/immutable model 封装。"

  - smell: Primitive Obsession
    detect:
      - "使用 String/int 代表 Money/Email/Id 等语义类型"
    refactorings:
      - name: "Introduce Value Object"
      - name: "Replace Magic Number with Constant/Enum"
      - name: "Introduce Type-safe Id"
    notes.dart: "sealed class/typedef/records/enum-class 皆可。"

  - smell: Long Parameter List
    detect:
      - "params >5"
    refactorings:
      - name: "Introduce Parameter Object"
      - name: "Replace Positional with Named"
      - name: "Builder/CopyWith defaults"
    notes.flutter: "Widget 构造用 named params + 默认值。"

  - smell: Divergent Change
    alias: [many reasons to change]
    detect:
      - "一处代码因不同原因频繁改动"
    refactorings:
      - name: "Extract Module/Class by reason"
      - name: "Separate Query from Modifier"
      - name: "Observer/Provider split"
    notes.flutter: "UI/State/Service/Repository 分层。"

  - smell: Shotgun Surgery
    detect:
      - "小需求导致多处零散改动"
    refactorings:
      - name: "Move Behavior to single module"
      - name: "Facade/Service introduction"
      - name: "Centralize Style/Theme/Tokens"
    notes.flutter: "统一 Theme/ColorScheme/TextTheme。"

  - smell: Switch Statements on Type
    alias: [type code]
    detect:
      - "switch/if 根据类型分支反复出现"
    refactorings:
      - name: "Replace Conditional with Polymorphism"
      - name: "Sealed Class + pattern matching"
      - name: "Map of strategies"
    notes.dart: "sealed class + switch exhaustive 非常适配。"

  - smell: Temporary Field
    detect:
      - "字段仅在部分流程有效，其余时间为空"
    refactorings:
      - name: "Extract Class for the temporary state"
      - name: "Introduce Local Variable"
      - name: "Method Object"
    notes.flutter: "表单步骤态提到 StepState 对象。"

  - smell: Message Chains
    alias: [train wreck]
    detect:
      - "a.b().c().d"
    refactorings:
      - name: "Hide Delegate"
      - name: "Introduce Middle Method"
      - name: "Law of Demeter via Facade"
    notes.dart: "提供短路 API，减少耦合。"

  - smell: Middle Man
    detect:
      - "类多数方法只是转发"
    refactorings:
      - name: "Remove Middle Man"
      - name: "Inline Delegate"
      - name: "Expose needed collaborator"
    notes.dart: "保留确实抽象的 Façade，移除无价值转发。"

  - smell: Refused Bequest
    detect:
      - "子类继承但不用基类大部分行为"
    refactorings:
      - name: "Replace Inheritance with Composition"
      - name: "Extract Interface"
    notes.dart: "prefer composition over inheritance。"

  - smell: Comments Excess (Explaining Bad Code)
    detect:
      - "大量注释为绕复杂实现"
    refactorings:
      - name: "Extract Function with good name"
      - name: "Rename for intention"
      - name: "Replace Comment with Code"
    notes.dart: "Doc 注释保留 API 合同，移除借口型注释。"

  - smell: Dead Code
    detect:
      - "未调用/不可达/过时 flags"
    refactorings:
      - name: "Safe Delete"
      - name: "Inline and Remove"
    safety: ["search-references", "keep-one-release-behind-flag"]

  - smell: Speculative Generality
    detect:
      - "为未来需求而设计的抽象未被使用"
    refactorings:
      - name: "Collapse Hierarchy"
      - name: "Inline Class"
      - name: "Remove Parameterization"
    notes.dart: "KISS；等需求真实出现再抽象。"

  - smell: Inappropriate Intimacy
    detect:
      - "两个模块彼此访问私密细节"
    refactorings:
      - name: "Introduce Interface"
      - name: "Move Method/Field"
      - name: "Encapsulate Collection"
    notes.dart: "公开不可变视图，内部可变。"

  - smell: Incomplete Library Class
    detect:
      - "外部扩展方法堆满，说明原类职责缺口"
    refactorings:
      - name: "Move common ext methods into helper/adapter"
      - name: "Propose Upstream PR or Adapter"
    notes.dart: "保持扩展方法聚合与命名一致性。"

  - smell: Magic Numbers/Strings
    detect:
      - "硬编码常量散落"
    refactorings:
      - name: "Introduce Constant"
      - name: "Introduce Enum/Sealed"
      - name: "Theme/Tokenize"
    notes.flutter: "颜色/间距/半径抽象为 Design Tokens。"

  - smell: Global State / Singleton Abuse
    detect:
      - "静态单例跨域读写"
    refactorings:
      - name: "Dependency Injection (constructor/providers)"
      - name: "Pass Context/Ref explicitly"
      - name: "Encapsulate Mutable State"
    notes.flutter: "用 Riverpod/Provider/GetIt（谨慎）注入。"

  - smell: UI Does Business Logic
    alias: [fat widget]
    detect:
      - "Widget 直接做计算/校验/网络"
    refactorings:
      - name: "Move to Service/UseCase"
      - name: "Introduce StateNotifier/Bloc"
      - name: "Selector/Provider for derived state"
    notes.flutter: "build() 只做渲染；副作用交给 effect 层。"

  - smell: Expensive Work in build()
    detect:
      - "build() 内部进行排序/解析/IO/网络"
    refactorings:
      - name: "Memoize via Provider/Selector"
      - name: "Compute outside build (initState/useEffect)"
      - name: "Use const widgets & const constructors"
    notes.flutter: "避免 setState 触发频繁重建的计算浪费。"

  - smell: setState Overuse / Rebuild Storm
    detect:
      - "全局 setState 导致整树重建"
    refactorings:
      - name: "Lift state up and split widgets"
      - name: "Use ValueListenable/Selector/Consumer"
      - name: "Extract RepaintBoundary"
    notes.flutter: "粒度化 state；关键子树加 RepaintBoundary。"

  - smell: Async in build / init Race
    detect:
      - "build() 里直接 await / 触发副作用"
    refactorings:
      - name: "use initState + mounted checks"
      - name: "FutureBuilder/StreamBuilder"
      - name: "useEffect-like hooks (flutter_hooks)"
    notes.flutter: "避免因热重载/重建导致重复请求。"

  - smell: Misuse of BuildContext
    detect:
      - "异步回调中使用过期 context"
    refactorings:
      - name: "Check mounted before use"
      - name: "Navigator.of(context, rootNavigator:true) when needed"
      - name: "Pass safe references instead of context"
    notes.flutter: "弹框/路由注意使用当前树有效 context。"

  - smell: Keys Mismanagement
    detect:
      - "列表/可重排组件缺少稳定 key"
    refactorings:
      - name: "Introduce ValueKey/ObjectKey"
      - name: "Use UniqueKey only for force-recreate"
    notes.flutter: "动画/可拖拽/重排必须稳定 Key。"

  - smell: Bloated Theme/Styles Scattered
    detect:
      - "样式分散、重复颜色/间距"
    refactorings:
      - name: "Design Tokens + Theme extensions"
      - name: "Extract AppTextStyles/AppSpacings"
      - name: "Use CopyWith"
    notes.flutter: "集中到 ThemeExtension/AppTheme。"

  - smell: Tight Coupling to Third-Party
    detect:
      - "业务直接调用第三方 SDK API"
    refactorings:
      - name: "Introduce Anti-corruption Layer (ACL)"
      - name: "Adapter/Facade"
      - name: "Port-Adapter (Hexagonal)"
    notes.dart: "便于替换/Mock；隔离平台通道。"

  - smell: Unawaited Futures / Fire-and-Forget
    detect:
      - "异步未 await 也未捕获异常"
    refactorings:
      - name: "await + try/catch"
      - name: "use unawaited(...) with handler"
      - name: "Return Result/Either for errors"
    notes.dart: "lint: unawaited_futures, discarded_futures。"

  - smell: Blocking UI / Synchronous IO on Main
    detect:
      - "compute-heavy or sync IO on UI thread"
    refactorings:
      - name: "Isolate/compute()"
      - name: "Stream chunking/backpressure"
      - name: "Progress + Cancellation"
    notes.flutter: "保帧率 16ms；避免 jank。"

  - smell: Large Interface / Fat Repository
    detect:
      - "接口方法过多、职责不清"
    refactorings:
      - name: "Split Interface (ISP)"
      - name: "CQRS: separate read/write"
      - name: "Introduce Query/Command objects"
    notes.dart: "更易 mock 与替换。"

  - smell: Conditional Complexity Explosion
    detect:
      - "深层 if/else/switch 嵌套≥3层"
    refactorings:
      - name: "Strategy/State pattern (sealed)"
      - name: "Guard clauses / early return"
      - name: "Lookup tables (map)"
    notes.dart: "sealed + exhaustive switch 非常简洁。"

  - smell: Overuse of Mixin/Extension for State
    detect:
      - "通过 mixin/extension 修改隐含状态"
    refactorings:
      - name: "Prefer composition"
      - name: "Explicit dependencies via constructor"
    notes.dart: "extension 应无状态副作用。"

  - smell: Test Fragility due to UI Coupling
    detect:
      - "测试依赖具体 widget 树结构"
    refactorings:
      - name: "Extract Presenter/ViewModel"
      - name: "Public API for state, golden for UI"
    notes.flutter: "分离可测试逻辑与 UI。"
