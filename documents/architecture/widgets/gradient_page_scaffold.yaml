meta:
  name: "渐变页面脚手架"
  type: "widget"
  file_path: "lib/presentation/widgets/gradient_page_scaffold.dart"
  description: "带渐变背景的 Scaffold 包装器，统一管理所有页面的渐变背景"
  version: "1.0"
  created_date: "251025"
  last_updated: "251025"

widget_definition:
  name: "GradientPageScaffold"
  layer: "presentation"
  pattern: "stateless"
  category: "layout"
  reusable: true
  
widget_types:
  - name: "StatelessWidget"
    description: "无状态 Widget，用于统一的页面布局"
    usage: "所有应用页面的根布局容器"
    
widget_properties:
  - name: "appBar"
    type: "PreferredSizeWidget?"
    required: false
    default_value: "null"
    description: "顶部应用栏"
    
  - name: "drawer"
    type: "Widget?"
    required: false
    default_value: "null"
    description: "侧边抽屉"
    
  - name: "body"
    type: "Widget"
    required: true
    description: "页面主体内容"
    
  - name: "floatingActionButton"
    type: "Widget?"
    required: false
    default_value: "null"
    description: "浮动操作按钮"
    
  - name: "floatingActionButtonLocation"
    type: "FloatingActionButtonLocation?"
    required: false
    default_value: "null"
    description: "浮动操作按钮位置"
    
  - name: "bottomNavigationBar"
    type: "Widget?"
    required: false
    default_value: "null"
    description: "底部导航栏"
    
  - name: "gradient"
    type: "Gradient?"
    required: false
    default_value: "null"
    description: "自定义渐变背景，如果不提供则使用主题的 pageBackground 渐变"
    
  - name: "extendBodyBehindAppBar"
    type: "bool"
    required: false
    default_value: "false"
    description: "是否将 body 延伸到 AppBar 后面"
    
  - name: "extendBody"
    type: "bool"
    required: false
    default_value: "false"
    description: "是否将 body 延伸到底部导航栏后面"
    
widget_methods:
  - name: "build"
    return_type: "Widget"
    description: "构建带渐变背景的 Scaffold"
    parameters: "BuildContext context"
    implementation: |
      1. 创建 Scaffold
      2. 设置 appBar、drawer、bottomNavigationBar 等属性
      3. 将 body 包装在 Container 中，添加渐变背景
      4. 渐变背景优先使用自定义 gradient，否则使用 context.gradients.pageBackground
    
dependencies:
  external:
    - package: "flutter"
      version: ">=3.0.0"
      usage: "Material Design widgets and theming"
      
  internal:
    - path: "../../core/theme/app_gradients.dart"
      usage: "渐变定义和 context.gradients 扩展"
      
state_management:
  type: "none"
  description: "无状态组件，不需要状态管理"
  
ui_interactions:
  user_actions: []
  system_events: []
  navigation: []
  
usage_examples:
  - name: "基本用法"
    description: "在所有页面中使用，替代标准 Scaffold"
    code: |
      return GradientPageScaffold(
        appBar: const PageAppBar(title: 'Home'),
        drawer: const MainDrawer(),
        body: Center(child: Text('Content')),
      );
      
  - name: "自定义渐变"
    description: "使用自定义渐变背景"
    code: |
      return GradientPageScaffold(
        appBar: const PageAppBar(title: 'Custom'),
        gradient: const LinearGradient(
          colors: [Colors.blue, Colors.purple],
        ),
        body: Center(child: Text('Custom gradient')),
      );
      
related_widgets:
  - name: "PageAppBar"
    relationship: "usage"
    description: "通常作为 appBar 使用"
    
  - name: "MainDrawer"
    relationship: "usage"
    description: "通常作为 drawer 使用"
    
  - name: "HomePage"
    relationship: "used_by"
    description: "所有页面都使用此组件作为根布局"
    
  - name: "InboxPage"
    relationship: "used_by"
    description: "所有页面都使用此组件作为根布局"
    
  - name: "TaskListPage"
    relationship: "used_by"
    description: "所有页面都使用此组件作为根布局"
    
design_decisions:
  - decision: "统一渐变背景管理"
    rationale: "避免每个页面单独实现渐变背景，确保视觉一致性"
    
  - decision: "自动使用主题渐变"
    rationale: "如果不提供自定义渐变，自动使用主题的 pageBackground，支持浅色/深色主题切换"
    
  - decision: "保留 Scaffold 所有属性"
    rationale: "不限制 Scaffold 的功能，只是添加渐变背景层"

