meta:
  summary: >
    Page-level composition for GranoFlow. Each entry outlines layout regions,
    provider hooks, widget usage, and navigation behavior. Reusable components
    are referenced from widgets.yaml.
  source_of_truth:
    - documents/product_requirements.yaml
    - documents/user_stories.md
    - documents/architecture/providers.yaml
    - documents/architecture/widgets.yaml

pages:
  - name: HomeDashboardPage
    route: /
    providers:
      - metricSnapshotProvider
      - seedInitializerProvider
    layout:
      breakpoints:
        - maxWidth: 600
          structure:
            - AppBar(title: AppLocalizations.homeGreeting)
            - Padding(16)
            - Column:
                - DashboardMetricCard x4 (vertical)
                - SizedBox(24)
                - PrimaryActionButton (进入收集箱)
                - SizedBox(12)
                - PrimaryActionButton (打开任务列表)
                - SizedBox(24)
                - SeedCalloutCard (visible when tutorial tasks incomplete)
        - minWidth: 600
          structure:
            - AppBar(title: AppLocalizations.homeGreeting)
            - LayoutBuilder (grid):
                - Grid(
                    columns: 2,
                    children: DashboardMetricCard x4
                  )
                - Row(
                    children: [
                      Expanded(PrimaryActionButton plan),
                      SizedBox(16),
                      Expanded(PrimaryActionButton work)
                    ]
                  )
                - SeedCalloutCard
    interactions:
      - PullToRefresh: MetricRefreshHeader + metricRefreshNotifier
      - PrimaryActionButton: Navigate to InboxPage / TaskListPage
      - SeedCalloutCard action: Navigate to tutorial root task in edit mode
    notes:
      - Seed initializer runs before metrics to ensure tutorial tasks exist.

  - name: InboxPage
    route: /inbox
    providers:
      - inboxTasksProvider (filtered)
      - inboxFilterProvider
      - templateSuggestionsProvider(query)
      - templateActionsNotifier
    layout:
      structure:
        - CustomScrollView:
            - SliverAppBar(
                pinned: true,
                title: AppLocalizations.navInboxTitle,
                actions: [FilterResetButton]
              )
            - SliverToBoxAdapter(
                child: Column(
                    children: [
                      PersistentInboxInput,
                      SizedBox(height: 12),
                      TemplateSuggestionWrap,
                      SizedBox(height: 8),
                      ChipToggleGroup(contextTags),
                      SizedBox(height: 8),
                      ChipToggleGroup(priorityTags)
                    ]
                  )
              )
            - SliverPadding(
                padding: EdgeInsets.symmetric(vertical: 8),
                sliver: SliverList(
                    delegate: InboxTaskItemBuilder
                  )
              )
            - SliverToBoxAdapter(EmptyStateCallout when list empty)
    interactions:
      - PersistentInboxInput.onSubmit: captureInboxTask -> clear text; sends analytics
      - TemplateSuggestionChip.onTap: TaskTemplateService.applyTemplate -> focus new task (optional plan)
      - Context/priority ChipToggleGroup: update inboxFilterProvider state
      - InboxTaskItem.expand: reveal TagPanel + ParentSelector (autocomplete via TaskRepository.searchByTitle)
      - SwipeRight: QuickPlan (move to Today via TaskService.planTask)
      - SwipeLeft: show actions EditTitle / Delete (soft delete)
      - ActionButton.MoveToList: opens DatePicker + section selection, calls TaskService.planTask
      - TagPanel changes call TaskService.updateTags
      - ParentSelector search results limited to root + pending tasks
    notes:
      - Template suggestions limited to 6, sorted by last used; typing narrows matches.
      - FilterResetButton shows when任何筛选生效，点击恢复默认。
      - Empty state messaging提示可先从模板开始，调用 TemplateActionsNotifier。

  - name: TaskListPage
    route: /tasks
    providers:
      - taskSectionsProvider(section)
      - rootTasksProvider
      - taskTreeProvider(rootId)
      - expandedRootTaskIdProvider
      - taskEditActionsNotifier
    layout:
      structure:
        - AppBar(actions: toggle edit mode, filters)
        - AnimatedCrossFade(baseMode, editMode)
        - BaseMode:
            - TabBar: Today/Tomorrow/Later
            - TabBarView:
                - TaskSectionList (leaf tasks only)
        - EditMode:
            - ListView of RootTask cards:
                - TaskEditItem for root
                - AnimatedList of children when expanded
    interactions:
      - BaseMode tap: start focus via FocusFlowService
      - BaseMode longPressDrag: reorder or change section
      - EditMode drag: TaskHierarchyService.moveToParent/moveAcrossSections
      - EditMode action icons: add subtask, edit title (inline text field), archive
    notes:
      - Only one root expanded at a time controlled by expandedRootTaskIdProvider.

  - name: FocusTimerPage
    route: /focus/:taskId
    providers:
      - focusSessionProvider(taskId)
      - focusActionsNotifier
      - metricSnapshotProvider (for summary callout)
    layout:
      structure:
        - AppBar(title: Task title, actions: close)
        - Column:
            - FocusTimerDisplay
            - SizedBox(24)
            - Row(
                children: [
                  Expanded(ElevatedButton pause/resume),
                  SizedBox(16),
                  Expanded(ElevatedButton end session)
                ]
              )
            - SwitchListTile(alarm toggle)
            - TemplateSuggestionChip row (quick subtask)
    interactions:
      - Pause/resume uses focusActionsNotifier.start/pause
      - End session opens FocusEndDialog
      - QuickSubtask -> focusActionsNotifier.quickSubtask
    notes:
      - `complete_without_timer` outcome bypasses reflection text when not needed.

  - name: FocusEndDialogPage
    type: modal
    providers:
      - focusActionsNotifier
    layout:
      structure:
        - FocusEndDialog (see widgets.yaml)
    interactions:
      - Complete: focusActionsNotifier.endFocus(outcome: complete, reflectionNote)
      - Add subtask / Log multiple / Mark wasted as described in product_requirements.yaml
    notes:
      - Called from FocusTimerPage, returns to TaskListPage on completion.

  - name: CompletedArchivePage
    route: /completed
    providers:
      - taskSectionsProvider(completed)
      - taskSectionsProvider(archived)
      - preferenceActionsNotifier
    layout:
      structure:
        - AppBar(title: Completed)
        - TabBar: Completed / Archived
        - TabBarView:
            - SliverList of completed tasks with actions (reactivate, archive, delete -> trash)
            - SliverList of archived tasks (restore, delete -> trash)
    interactions:
      - Reactivate -> TaskService.markInProgress
      - Archive from completed -> TaskService.archive
      - Delete -> TaskService.softDelete (guard against templateLockCount)
    notes:
      - Ensure Task ID visible per product_requirements.yaml requirement.

  - name: TrashPage
    route: /trash
    providers:
      - taskSectionsProvider(trash)
    layout:
      structure:
        - AppBar(title: Trash, actions: EmptyTrash button)
        - SliverList of trashed tasks
    interactions:
      - Restore -> TaskService.markInProgress
      - EmptyTrash -> confirmation dialog -> TaskService.purgeObsolete
    notes:
      - Display warning before permanent delete.

  - name: SettingsSheet
    type: bottom_sheet
    providers:
      - appLocaleProvider
      - themeProvider
      - fontScaleProvider
      - preferenceActionsNotifier
    layout:
      structure:
        - ListTile for language (ChipToggleGroup)
        - ListTile for theme (radio group)
        - ListTile for font scale (slider or segmented control)
    interactions:
      - Changes call preferenceActionsNotifier.update
    notes:
      - Accessed from navigation menu and toolbar actions.
