meta:
  name: MetricRepository
  version: 1.0
  created_date: 251024
  last_updated: 251024
  description: >
    指标仓库 - 计算和缓存主页仪表板使用的指标快照。
    提供快速读取而不扫描整个任务表。

repository_definition:
  name: MetricRepository
  depends_on: [Isar, TaskRepository, FocusSessionRepository]
  storage: isar_collection
  primary_model: MetricSnapshot

responsibilities:
  - 在任务/状态/会话变更后重新计算总计
  - 为表示层提供快速读取而不扫描整个任务表

methods:
  - name: recompute
    params:
      - reason: MetricRecomputeReason
    returns: Future<MetricSnapshot>
    notes: 在重要变更后由服务/钩子调用

  - name: latest
    returns: Stream<MetricSnapshot?>
    notes: 获取最新的指标快照

  - name: invalidateCache
    returns: Future<void>
    notes: 使缓存失效，强制重新计算

  - name: getHistoricalMetrics
    params:
      - days: int
    returns: Future<List<MetricSnapshot>>
    notes: 获取历史指标数据

business_rules:
  - 只保留一个快照记录（滚动单例）
  - 在重要的任务或专注会话变更后重新计算
  - 作为主页指标的唯一来源以保持 UI 简单

metric_fields:
  - totalCompletedTasks: 总完成任务数
  - totalFocusMinutes: 总专注分钟数
  - pendingTasks: 待处理任务数
  - pendingTodayTasks: 今日待处理任务数
  - calculatedAtUtc: 计算时间戳

recompute_triggers:
  - 任务状态变更
  - 专注会话创建/更新
  - 任务创建/删除
  - 任务归档/恢复

performance_benefits:
  - 避免实时计算聚合数据
  - 减少主页加载时间
  - 简化 UI 状态管理
  - 为未来同步做准备

error_handling:
  - MetricCalculationError: 当指标计算失败时
  - CacheCorruption: 当缓存数据损坏时

performance_considerations:
  - 使用事务确保数据一致性
  - 批量计算减少数据库访问
  - 缓存策略优化查询性能