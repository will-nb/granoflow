meta:
  name: TaskRepository
  version: 1.0
  created_date: 251024
  last_updated: 251024
  description: >
    任务仓库 - 任务 CRUD、层次结构变更和分区查询的主要入口点。
    封装 Isar 访问模式，向服务层隐藏查询细节，暴露适合 Riverpod 提供者的异步 API。

repository_definition:
  name: TaskRepository
  depends_on: [Isar]
  storage: isar_collection
  primary_model: Task

responsibilities:
  - 使用正确的时间戳和排序索引持久化任务实体
  - 为今日/明日/稍后和收集箱视图提供分区流
  - 维护父子关系，防止对已完成叶子或模板锁定父任务的编辑
  - 软删除到垃圾箱；将伪删除记录移动到清除队列
  - 在持久化前将 dueAt 值标准化为选定本地日期的 23:59:59

methods:
  - name: watchSection
    params:
      - section: TaskSection
    returns: Stream<List<Task>>
    notes: 应用状态 + dueAt 过滤器，与 UI 分区对齐

  - name: watchTaskTree
    params:
      - rootTaskId: int
    returns: Stream<TaskTree>
    notes: 发出根任务及其子任务；在编辑模式下单个根展开时使用

  - name: watchInbox
    returns: Stream<List<Task>>
    notes: 返回按 createdAt DESC 排序的收集箱任务列表

  - name: watchInboxFiltered
    params:
      - contextTag: String?
      - priorityTag: String?
    returns: Stream<List<Task>>
    notes: 服务器端筛选，减少 UI 过滤开销；可基于 watchInbox 扩展

  - name: createTask
    params:
      - draft: TaskDraft
    returns: Future<Task>
    notes: 生成 `taskId`，分配初始 sortIndex，捕获 createdAtUtc/updatedAtUtc

  - name: createTaskWithSeed
    params:
      - draft: SeedTaskDraft
    returns: Future<Task>
    notes: 在种子导入期间使用；接受 slug 并通过普通生成器确保唯一 taskId

  - name: updateTask
    params:
      - taskId: int
      - payload: TaskUpdate
    returns: Future<void>

  - name: moveTask
    params:
      - taskId: int
      - targetParentId: int?
      - targetSection: TaskSection
      - sortIndex: double
    returns: Future<void>
    notes: 处理拖放结果，在持久化为 UTC 前将选定的日历日期转换为本地 23:59:59

  - name: markStatus
    params:
      - taskId: int
      - status: TaskStatus
    returns: Future<void>

  - name: archiveTask
    params:
      - taskId: int
    returns: Future<void>
    notes: 设置 status=archived 并更新 endedAtUtc

  - name: softDelete
    params:
      - taskId: int
    returns: Future<void>
    notes: 移动到垃圾箱（status=trashed）并排队进行伪删除；当 templateLockCount > 0 时拒绝

  - name: purgeObsolete
    params:
      - olderThan: DateTime
    returns: Future<int>
    notes: 对超出保留窗口的伪删除进行永久删除

  - name: adjustTemplateLock
    params:
      - taskId: int
      - delta: int
    returns: Future<void>
    notes: 在创建或删除模板时维护 templateLockCount 的内部辅助方法

  - name: searchByTitle
    params:
      - query: String
      - status: TaskStatus?
      - limit: int
    returns: Future<List<Task>>
    notes: 为父任务自动补全提供候选，默认筛选 pending/doing 任务

business_rules:
  - 只有叶子任务可以运行专注会话
  - 父任务不能直接运行专注会话
  - 模板锁定计数大于零时，任务不能被删除/归档/完成
  - 任务状态驱动页面可见性
  - 软删除后进入垃圾箱状态
  - 伪删除用于同步冲突检测

error_handling:
  - InvalidTaskOperation: 当业务规则被违反时
  - TaskNotFound: 当任务 ID 不存在时
  - TemplateLocked: 当尝试修改模板锁定的任务时

performance_considerations:
  - 使用索引优化查询性能
  - 批量操作使用事务
  - 流式查询减少内存使用
  - 缓存常用查询结果