meta:
  version: 1
  type: step
  iteration: "251025-2"
  generated_at: "2025-01-25 16:00:00"
  based_on_preview: "documents/plan/251025-2-preview.yaml"
  description: "基于preview文档的添加任务按钮代码实现计划"

# 执行状态跟踪
execution_status:
  overall_status: "pending"
  current_phase: "analysis"
  completed_phases: []
  
  phases:
    - name: "analysis"
      description: "需求分析和实现规划"
      status: "pending"
      tasks:
        - task: "分析preview文档需求"
          status: "pending"
          retry_count: 0
          failure_reasons: []
        - task: "确定实现文件列表"
          status: "pending"
          retry_count: 0
          failure_reasons: []
        - task: "分析依赖关系"
          status: "pending"
          retry_count: 0
          failure_reasons: []
    
    - name: "implementation"
      description: "代码实现"
      status: "pending"
      tasks:
        - task: "修改ResponsiveNavigation组件"
          status: "pending"
          retry_count: 0
          failure_reasons: []
        - task: "修改DrawerMenu组件"
          status: "pending"
          retry_count: 0
          failure_reasons: []
        - task: "添加创建任务弹窗方法"
          status: "pending"
          retry_count: 0
          failure_reasons: []
    
    - name: "verification"
      description: "代码验证"
      status: "pending"
      tasks:
        - task: "编译检查"
          status: "pending"
          retry_count: 0
          failure_reasons: []
        - task: "基本功能验证"
          status: "pending"
          retry_count: 0
          failure_reasons: []
        - task: "集成检查"
          status: "pending"
          retry_count: 0
          failure_reasons: []

# 实现计划（基于preview文档）
implementation_plan:
  description: "基于preview文档的添加任务按钮代码实现计划"
  
  modified_files:
    description: "需要修改的现有文件"
    files:
      - file: "lib/presentation/navigation/responsive_navigation.dart"
        based_on: "preview中ResponsiveNavigation的修改设计"
        change_type: "modify"
        description: "添加FloatingActionButton和动态位置配置"
        current_structure: "Scaffold with body and bottomNavigationBar"
        new_structure: "Scaffold with body, bottomNavigationBar, and conditional floatingActionButton"
        changes:
          - type: "property_addition"
            description: "添加floatingActionButton属性"
            implementation: |
              floatingActionButton: MediaQuery.of(context).orientation == Orientation.portrait
                  ? FloatingActionButton(
                      onPressed: () => _showCreateTaskDialog(context),
                      child: const Icon(Icons.add),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(16), // Reddit 风格圆角
                      ),
                      backgroundColor: Theme.of(context).colorScheme.primary,
                      foregroundColor: Theme.of(context).colorScheme.onPrimary,
                    )
                  : null, // 横屏时不使用Scaffold的FAB
          
          - type: "property_addition"
            description: "添加floatingActionButtonLocation属性"
            implementation: |
              floatingActionButtonLocation: MediaQuery.of(context).orientation == Orientation.portrait
                  ? FloatingActionButtonLocation.centerDocked
                  : null, // 横屏时由DrawerMenu处理
          
          - type: "method_addition"
            description: "添加_showCreateTaskDialog方法"
            implementation: |
              void _showCreateTaskDialog(BuildContext context) {
                showDialog(
                  context: context,
                  builder: (context) => const CreateTaskDialog(),
                );
              }
        dependencies:
          - "package:flutter/material.dart"
          - "lib/presentation/widgets/create_task_dialog.dart"
        called_by:
          - "lib/presentation/navigation/app_shell.dart"
        calls:
          - "lib/presentation/widgets/create_task_dialog.dart"
      
      - file: "lib/presentation/navigation/drawer_menu.dart"
        based_on: "preview中DrawerMenu的修改设计"
        change_type: "modify"
        description: "横屏模式下集成FAB作为最后一个菜单项"
        current_structure: "ListView with NavigationDestinations"
        new_structure: "ListView with NavigationDestinations + integrated FAB"
        changes:
          - type: "method_addition"
            description: "添加_showCreateTaskDialog方法"
            implementation: |
              void _showCreateTaskDialog(BuildContext context) {
                showDialog(
                  context: context,
                  builder: (context) => const CreateTaskDialog(),
                );
              }
          
          - type: "widget_modification"
            description: "在ListView底部添加集成FAB"
            implementation: |
              // 在横屏模式下，在ListView底部添加FAB
              if (MediaQuery.of(context).orientation == Orientation.landscape)
                Container(
                  padding: const EdgeInsets.all(16),
                  child: FloatingActionButton(
                    onPressed: () => _showCreateTaskDialog(context),
                    child: const Icon(Icons.add),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(16), // Reddit 风格圆角
                    ),
                    backgroundColor: Theme.of(context).colorScheme.primary,
                    foregroundColor: Theme.of(context).colorScheme.onPrimary,
                    elevation: 4, // 悬浮突出效果
                  ),
                )
        dependencies:
          - "package:flutter/material.dart"
          - "lib/presentation/widgets/create_task_dialog.dart"
        called_by:
          - "lib/presentation/navigation/responsive_navigation.dart"
        calls:
          - "lib/presentation/widgets/create_task_dialog.dart"

# 代码变更内容
code_changes:
  description: "具体的代码变更内容"
  
  modified_files:
    - file: "lib/presentation/navigation/responsive_navigation.dart"
      action: "modify"
      based_on: "preview中ResponsiveNavigation的修改设计"
      changes:
        - type: "class_modification"
          description: "在Scaffold中添加floatingActionButton和floatingActionButtonLocation"
          implementation: |
            return Scaffold(
              body: widget.child,
              bottomNavigationBar: AppNavigationBar(
                selectedIndex: widget.selectedIndex,
                onDestinationSelected: widget.onDestinationSelected,
              ),
              floatingActionButton: MediaQuery.of(context).orientation == Orientation.portrait
                  ? FloatingActionButton(
                      onPressed: () => _showCreateTaskDialog(context),
                      child: const Icon(Icons.add),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(16), // Reddit 风格圆角
                      ),
                      backgroundColor: Theme.of(context).colorScheme.primary,
                      foregroundColor: Theme.of(context).colorScheme.onPrimary,
                    )
                  : null, // 横屏时不使用Scaffold的FAB
              floatingActionButtonLocation: MediaQuery.of(context).orientation == Orientation.portrait
                  ? FloatingActionButtonLocation.centerDocked
                  : null, // 横屏时由DrawerMenu处理
            );
        
        - type: "method_addition"
          description: "添加_showCreateTaskDialog方法"
          implementation: |
            void _showCreateTaskDialog(BuildContext context) {
              showDialog(
                context: context,
                builder: (context) => const CreateTaskDialog(),
              );
            }
    
    - file: "lib/presentation/navigation/drawer_menu.dart"
      action: "modify"
      based_on: "preview中DrawerMenu的修改设计"
      changes:
        - type: "method_addition"
          description: "添加_showCreateTaskDialog方法"
          implementation: |
            void _showCreateTaskDialog(BuildContext context) {
              showDialog(
                context: context,
                builder: (context) => const CreateTaskDialog(),
              );
            }
        
        - type: "widget_modification"
          description: "在ListView底部添加集成FAB"
          implementation: |
            // 在横屏模式下，在ListView底部添加FAB
            if (MediaQuery.of(context).orientation == Orientation.landscape)
              Container(
                padding: const EdgeInsets.all(16),
                child: FloatingActionButton(
                  onPressed: () => _showCreateTaskDialog(context),
                  child: const Icon(Icons.add),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(16), // Reddit 风格圆角
                  ),
                  backgroundColor: Theme.of(context).colorScheme.primary,
                  foregroundColor: Theme.of(context).colorScheme.onPrimary,
                  elevation: 4, // 悬浮突出效果
                ),
              )

# 验证计划
verification_plan:
  description: "代码验证计划"
  
  compilation_check:
    description: "编译检查"
    steps:
      - step: "运行flutter analyze"
        command: "flutter analyze"
        expectation: "无错误和警告"
      - step: "运行flutter pub get"
        command: "flutter pub get"
        expectation: "依赖包安装成功"
      - step: "检查语法错误"
        command: "dart analyze"
        expectation: "无语法错误"
  
  basic_functionality:
    description: "基本功能验证"
    steps:
      - step: "验证ResponsiveNavigation修改"
        method: "检查floatingActionButton和floatingActionButtonLocation是否正确添加"
        expectation: "竖屏模式下FAB正确显示，横屏模式下不显示"
      - step: "验证DrawerMenu修改"
        method: "检查集成FAB是否正确添加"
        expectation: "横屏模式下FAB正确集成到侧边栏底部"
      - step: "验证依赖关系"
        method: "检查import语句和依赖包"
        expectation: "所有依赖关系正确建立"
  
  integration_check:
    description: "集成检查"
    steps:
      - step: "验证屏幕方向切换"
        method: "测试竖屏和横屏模式下的FAB显示"
        expectation: "竖屏显示底部FAB，横屏显示侧边栏集成FAB"
      - step: "验证FAB点击功能"
        method: "测试FAB点击是否打开创建任务弹窗"
        expectation: "FAB点击后正确打开CreateTaskDialog"
      - step: "验证样式一致性"
        method: "检查FAB样式是否符合Reddit风格"
        expectation: "FAB使用圆角16px，主题色背景，悬浮效果"

# 成功标准
success_criteria:
  - "ResponsiveNavigation组件正确添加floatingActionButton和floatingActionButtonLocation"
  - "DrawerMenu组件正确集成FAB到侧边栏底部"
  - "竖屏模式下FAB显示在底部导航栏上方居中位置"
  - "横屏模式下FAB集成到侧边栏内部，具有悬浮突出效果"
  - "FAB点击后正确打开创建任务弹窗"
  - "FAB样式符合Reddit风格（圆角16px）"
  - "代码编译无错误"
  - "基本功能验证通过"
  - "集成检查通过"
  - "用户手工测试通过"

# 重试机制
retry_mechanism:
  max_retries: 3
  retry_conditions:
    - "编译错误"
    - "语法错误"
    - "依赖包问题"
    - "文件修改失败"
    - "FAB显示不正确"
    - "屏幕方向切换问题"
  
  skip_records: []
