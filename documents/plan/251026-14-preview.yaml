title: "自定义日期选择器优化"
date: "2025-10-26"
version: "1.0"

problem:
  description: "当前日期选择器功能单一，用户需要手动选择具体日期，缺少快速选择常用日期的功能"
  current_issues:
    - "用户需要手动滚动选择日期，操作繁琐"
    - "没有快速选择常用日期的选项（今天、明天、本周、当月）"
    - "可以选择过去的日期，不符合业务逻辑"
    - "用户体验不够直观和高效"
  impact:
    - "用户操作效率低"
    - "缺少常用日期的快速选择"
    - "可能选择无效的过去日期"

solution:
  approach: "实现增强版日期选择器，提供快速选择按钮 + 自定义日期选择"
  
  design_strategy:
    - "先显示快速选择对话框，包含4个常用日期选项"
    - "如果没有选择快速选项，显示标准日期选择器"
    - "限制只能选择今天及以后的日期"
    - "使用直观的文字描述替代具体日期"
  
  quick_selection_options:
    - "今天 - 当前日期"
    - "明天 - 当前日期 + 1天"
    - "本周 - 本周六（如果今天是周六，则为下周六）"
    - "当月 - 本月最后一天"
  
  fallback_option:
    - "选择其他日期 - 打开标准DatePicker"

technical_changes:
  files_to_modify:
    - "lib/presentation/inbox/inbox_page.dart"
    - "lib/l10n/app_zh_CN.arb"
    - "lib/l10n/app_zh_HK.arb"
    - "lib/l10n/app_en.arb"
  
  implementation_details:
    new_methods:
      - "_getThisWeekSaturday(DateTime now) - 计算本周六"
      - "_getEndOfMonth(DateTime now) - 计算本月最后一天"
      - "_showQuickDatePicker() - 显示快速选择对话框"
    
    modified_methods:
      - "_planTask() - 集成快速选择和标准选择器"
    
    new_widgets:
      - "_QuickDatePicker - 快速日期选择对话框"
    
    date_calculation_logic:
      today: "DateTime.now()"
      tomorrow: "DateTime.now().add(Duration(days: 1))"
      this_week: |
        final now = DateTime.now();
        final daysUntilSaturday = (DateTime.saturday - now.weekday) % 7;
        return now.add(Duration(days: daysUntilSaturday == 0 ? 7 : daysUntilSaturday));
      this_month: |
        final now = DateTime.now();
        return DateTime(now.year, now.month + 1, 0);

user_experience:
  benefits:
    - "快速选择常用日期，提高操作效率"
    - "直观的文字描述，用户更容易理解"
    - "防止选择无效的过去日期"
    - "保持灵活性，仍可选择任意未来日期"
  
  user_flow:
    - "用户点击'截止日期'按钮"
    - "显示快速选择对话框，包含4个常用选项"
    - "用户选择快速选项，或点击'选择其他日期'"
    - "如果选择其他日期，显示标准日期选择器"
    - "选择日期后，任务移动到相应的任务栏"

design_principles:
  - "效率优先：快速选择常用日期"
  - "直观性：使用文字描述而非具体日期"
  - "灵活性：保留自定义选择功能"
  - "安全性：防止选择无效日期"

acceptance_criteria:
  functional:
    - "快速选择对话框包含4个常用日期选项"
    - "点击快速选项直接设置对应日期"
    - "点击'选择其他日期'打开标准DatePicker"
    - "标准DatePicker只能选择今天及以后的日期"
    - "选择日期后任务正确移动到任务栏"
  
  visual:
    - "快速选择对话框布局清晰"
    - "按钮样式与整体设计一致"
    - "文字描述准确且易懂"
    - "交互反馈及时"
  
  localization:
    - "简体中文显示'今天'、'明天'、'本周'、'当月'"
    - "繁体中文(香港)显示'今天'、'明天'、'本週'、'當月'"
    - "英文显示'Today'、'Tomorrow'、'This Week'、'This Month'"
    - "所有文案简洁明了"

implementation_phases:
  phase_1:
    title: "添加本地化文案"
    description: "为快速选择对话框添加多语言支持"
    changes:
      - "添加datePickerTitle、datePickerToday等文案"
      - "更新三种语言的ARB文件"
  
  phase_2:
    title: "实现日期计算逻辑"
    description: "添加计算特殊日期的辅助方法"
    changes:
      - "实现_getThisWeekSaturday方法"
      - "实现_getEndOfMonth方法"
      - "添加日期计算测试"
  
  phase_3:
    title: "创建快速选择对话框"
    description: "实现_QuickDatePicker组件"
    changes:
      - "创建快速选择对话框UI"
      - "实现4个快速选择按钮"
      - "添加'选择其他日期'选项"
      - "处理用户选择逻辑"
  
  phase_4:
    title: "集成到现有流程"
    description: "修改_planTask方法集成新的选择器"
    changes:
      - "修改_planTask方法调用快速选择器"
      - "添加标准DatePicker作为备选"
      - "确保日期选择逻辑正确"
      - "测试完整的用户流程"

testing:
  manual_tests:
    - "点击'截止日期'按钮，确认快速选择对话框正常显示"
    - "选择'今天'，确认任务移动到今日任务"
    - "选择'明天'，确认任务移动到明日任务"
    - "选择'本周'，确认任务移动到本周任务"
    - "选择'当月'，确认任务移动到当月任务"
    - "选择'选择其他日期'，确认标准DatePicker正常打开"
    - "在标准DatePicker中选择过去日期，确认无法选择"
    - "在标准DatePicker中选择未来日期，确认任务正确移动"
  
  edge_cases:
    - "今天是周六时，'本周'选项的行为"
    - "月末最后一天时，'当月'选项的行为"
    - "跨年时的日期计算"
    - "快速连续点击按钮"

rollback_plan:
  description: "如果出现问题，可以快速回滚到当前实现"
  steps:
    - "恢复原来的_planTask方法"
    - "移除新增的本地化文案"
    - "删除_QuickDatePicker组件"

success_metrics:
  - "用户能够快速选择常用日期"
  - "操作步骤减少，效率提升"
  - "防止选择无效日期"
  - "保持原有的灵活性"
  - "用户体验更加直观和高效"

ui_design:
  quick_picker_layout: |
    ┌─────────────────────────────┐
    │ 选择截止日期                │
    ├─────────────────────────────┤
    │ 📅 今天                     │
    │ 📅 明天                     │
    │ 📅 本周 (周六)              │
    │ 📅 当月 (月底)              │
    ├─────────────────────────────┤
    │ 📅 选择其他日期              │
    └─────────────────────────────┘
  
  button_style:
    - "使用ListTile样式，左侧图标，右侧文字"
    - "图标使用Icons.calendar_today"
    - "点击效果与整体设计一致"
    - "支持禁用状态（如果需要）"

date_calculation_examples:
  today: "2025-10-26 (当前日期)"
  tomorrow: "2025-10-27 (当前日期 + 1天)"
  this_week: "2025-11-01 (本周六，如果今天是周六则为下周六)"
  this_month: "2025-10-31 (本月最后一天)"
