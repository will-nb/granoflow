meta:
  version: 1
  type: preview
  iteration: "251026-1"
  generated_at: "2025-10-26 05:30:00"

summary:
  objective: "为首页 GranoFlow 文字前插入 Logo，要求配色与文字一致，大小适宜，界面美观"
  requirements: 
    - "需求1: 在 MainDrawer 的 GranoFlow 文字前插入 AppLogo 组件"
    - "需求2: Logo 配色与文字保持一致，使用 onPrimary 变体"
    - "需求3: Logo 大小适宜，与文字高度协调"
    - "需求4: 整体界面美观，保持原有的视觉效果"

# 组件设计状态说明
component_design_states:
  description: "MainDrawer 头部区域的状态设计，包含 Logo 和文字的布局状态"
  
  states:
    - name: "headerDisplay"
      description: "头部显示状态"
      trigger: "MainDrawer 构建时"
      properties:
        - name: "logoVisible"
          type: "bool"
          description: "Logo 是否可见"
        - name: "textVisible"
          type: "bool"
          description: "文字是否可见"
        - name: "layoutDirection"
          type: "Axis"
          description: "布局方向"
      use_case: "头部区域显示 Logo 和文字"
  
  state_transitions:
    description: "头部区域状态切换逻辑"
    transitions:
      - from: "initial"
        to: "displayed"
        trigger: "build 方法调用"
        condition: "所有属性正确设置"

# 修改文件详细差异
modified_files:
  # MainDrawer 文件
  - file: "lib/presentation/widgets/main_drawer.dart"
    type: "StatelessWidget"
    class_name: "MainDrawer"
    description: "主抽屉组件，显示页面导航选项"
    
    # 当前结构
    current_structure:
      - "头部区域包含背景图片和半透明遮罩"
      - "文字内容区域包含 Logo 和标题的 Row 布局"
      - "使用 AppLogoIcon 组件显示 Logo"
      - "使用 Text 组件显示 homeGreeting"
      - "使用 Text 组件显示 homeTagline"
    
    # 新结构
    new_structure:
      - "头部区域包含背景图片和半透明遮罩"
      - "文字内容区域包含 Logo 和标题的 Row 布局"
      - "使用 AppLogo 组件显示 Logo 和文字"
      - "调整布局间距和尺寸"
      - "保持原有的视觉效果"
    
    # 属性变更
    properties_changes:
      - name: "AppLogo 组件"
        type: "Widget"
        description: "替换 AppLogoIcon 为 AppLogo 组件"
        required: true
        change_type: "修改"
        implementation: |
          const AppLogo(
            size: 32.0,
            showText: false,
            variant: AppLogoVariant.onPrimary,
          )
    
    # 实现变更
    implementation_changes:
      - field: "Logo 显示方式"
        current: "使用 AppLogoIcon 仅显示图标"
        new: "使用 AppLogo 组件，showText=false 仅显示图标"
        reason: "保持与文字的一致性，使用统一的 Logo 组件"
      - field: "布局间距"
        current: "SizedBox(width: 12)"
        new: "SizedBox(width: 8)"
        reason: "优化 Logo 和文字之间的间距"
      - field: "Logo 尺寸"
        current: "size: 32.0"
        new: "size: 28.0"
        reason: "调整 Logo 尺寸以更好地与文字协调"
    
    # 调用关系
    called_by:
      - "lib/presentation/navigation/app_router.dart"
      - "lib/presentation/navigation/responsive_navigation.dart"
    
    calls:
      - "lib/presentation/widgets/app_logo.dart"
      - "lib/presentation/navigation/sidebar_destinations.dart"

# 架构文档更新
architecture_updates:
  - file: "documents/architecture/widgets/main_drawer.yaml"
    changes:
      - field: "widget_styling"
        current_value: "头部样式定义"
        new_value: "更新头部样式，包含 Logo 组件样式"
        purpose: "反映 MainDrawer 中 Logo 组件的集成"
        reason: "MainDrawer 现在使用 AppLogo 组件"
      - field: "widget_dependencies"
        current_value: "SidebarDestinations 依赖"
        new_value: "添加 AppLogo 组件依赖"
        purpose: "记录新的依赖关系"
        reason: "MainDrawer 现在依赖 AppLogo 组件"
  
  - file: "documents/architecture/widgets/app_logo.yaml"
    changes:
      - field: "widget_categories"
        current_value: "ui_component 分类"
        new_value: "ui_component 分类，标记为可复用组件"
        purpose: "明确 AppLogo 组件的分类和用途"
        reason: "AppLogo 组件被 MainDrawer 使用"

# 测试策略
testing_strategy:
  unit_tests:
    description: "测试 MainDrawer 中 Logo 集成的单元测试"
    coverage_target: "≥80%"
    test_files:
      - "test/presentation/widgets/main_drawer_test.dart"
      - "test/presentation/widgets/app_logo_test.dart"
  
  widget_tests:
    description: "测试 MainDrawer 中 Logo 显示的组件测试"
    test_files:
      - "test/presentation/widgets/main_drawer_test.dart"
      - "test/presentation/widgets/app_logo_test.dart"
  
  integration_tests:
    description: "测试 MainDrawer 与 AppLogo 组件集成的集成测试"
    test_files:
      - "test/presentation/widgets/main_drawer_test.dart"

# 成功标准
success_criteria:
  - "所有测试通过（单元测试、组件测试、集成测试）"
  - "MainDrawer 中 Logo 正确显示"
  - "Logo 配色与文字保持一致"
  - "Logo 大小适宜，与文字高度协调"
  - "整体界面美观，保持原有的视觉效果"
  - "通过 flutter analyze 检查"
  - "Logo 组件响应式设计正常工作"
  - "主题切换时 Logo 颜色正确更新"
