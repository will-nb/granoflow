title: "任务标题展开编辑体验优化"
date: "2025-10-26"
version: "1.0"

problem:
  description: "当前内联编辑实现破坏了原有的展开体验，用户点击文字直接进入编辑模式而不是先展开，缺少展开/编辑状态的视觉区分"
  current_behavior:
    - "点击任务标题直接进入编辑模式"
    - "缺少展开和编辑状态的视觉区分"
    - "用户体验不符合主流设计模式"
  impact:
    - "用户无法先查看任务详情再决定是否编辑"
    - "界面缺少清晰的状态提示"
    - "交互流程不符合用户预期"

solution:
  approach: "实现两阶段交互模式：先展开查看详情，再进入编辑模式"
  design_pattern: "条件渲染 + 状态控制"
  
  interaction_flow:
    - "阶段1：未展开状态 - 显示静态文本，点击整行展开"
    - "阶段2：展开状态 - 显示可编辑TextField，明显视觉变化"
    - "阶段3：编辑状态 - 用户可以直接编辑标题"

  visual_design:
    unexpanded_state:
      - "静态Text组件"
      - "无边框，无背景色"
      - "点击整行展开"
    expanded_state:
      - "无边框TextField（符合2025年趋势）"
      - "下划线设计（主色调）"
      - "微妙背景色变化（surfaceVariant）"
      - "聚焦时下划线加粗"
      - "圆角设计（8px）"
      - "增加内边距"

technical_changes:
  files_to_modify:
    - "lib/presentation/inbox/inbox_page.dart"
  
  implementation_details:
    - "使用条件渲染：!isExpanded ? Text : TextField"
    - "移除GestureDetector包装，恢复整行点击展开"
    - "TextField装饰：OutlineInputBorder + 圆角 + 主色调"
    - "保持现有的保存逻辑和错误处理"

  code_structure:
    before: |
      GestureDetector(
        onTap: () {}, // 阻止冒泡
        child: TextField(...) // 始终显示
      )
    after: |
      if (!isExpanded)
        Text(task.title, style: ...)
      else
        TextField(
          decoration: InputDecoration(
            border: UnderlineInputBorder(
              borderSide: BorderSide(color: primary, width: 1),
            ),
            enabledBorder: UnderlineInputBorder(
              borderSide: BorderSide(color: primary.withOpacity(0.3)),
            ),
            focusedBorder: UnderlineInputBorder(
              borderSide: BorderSide(color: primary, width: 2),
            ),
            filled: true,
            fillColor: surfaceVariant.withOpacity(0.3),
            contentPadding: EdgeInsets.symmetric(horizontal: 12, vertical: 8),
          ),
        )

user_experience:
  benefits:
    - "符合主流任务管理应用的设计模式"
    - "清晰的视觉状态区分"
    - "直观的交互流程：查看 → 编辑"
    - "更好的可访问性和用户体验"
  
  user_flow:
    - "用户看到任务列表，标题为静态文本"
    - "点击任务行展开，查看详情和标签"
    - "展开后标题变为带边框的输入框"
    - "用户可以直接编辑标题"
    - "按回车或失去焦点保存修改"

acceptance_criteria:
  functional:
    - "未展开时显示静态Text，不可编辑"
    - "点击整行展开任务详情"
    - "展开后标题变为可编辑的TextField"
    - "TextField有明显的视觉变化（边框、背景、圆角）"
    - "编辑功能正常工作（保存、取消、错误处理）"
  
  visual:
    - "未展开状态：静态文本，无边框"
    - "展开状态：下划线TextField，微妙背景色"
    - "聚焦状态：下划线加粗，主色调"
    - "符合2025年Material Design 3趋势"
  
  interaction:
    - "整行点击展开/收起"
    - "展开后直接可编辑"
    - "编辑时不会意外收起"
    - "保存后保持展开状态"

implementation_phases:
  phase_1:
    title: "移除GestureDetector包装"
    description: "恢复整行点击展开功能"
    changes:
      - "移除TextField外的GestureDetector"
      - "确保InkWell的onTap正常工作"
  
  phase_2:
    title: "实现条件渲染"
    description: "根据展开状态显示不同组件"
    changes:
      - "!isExpanded ? Text : TextField"
      - "保持现有的状态管理逻辑"
  
  phase_3:
    title: "优化TextField样式"
    description: "添加现代下划线设计"
    changes:
      - "UnderlineInputBorder + 主色调下划线"
      - "微妙背景色变化（surfaceVariant）"
      - "聚焦状态下划线加粗"
      - "符合2025年设计趋势"

testing:
  manual_tests:
    - "点击任务行展开/收起"
    - "展开后标题变为可编辑"
    - "编辑功能正常工作"
    - "视觉变化明显且美观"
  
  edge_cases:
    - "快速点击展开/收起"
    - "编辑过程中意外点击"
    - "空标题处理"
    - "长标题显示"

rollback_plan:
  description: "如果出现问题，可以快速回滚到当前实现"
  steps:
    - "恢复GestureDetector包装"
    - "恢复始终显示TextField"
    - "保持现有的点击处理逻辑"

success_metrics:
  - "用户能够正常展开查看任务详情"
  - "展开后标题明显变为可编辑状态"
  - "编辑功能完全正常"
  - "整体体验符合主流设计"
