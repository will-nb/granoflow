meta:
  version: 1
  type: preview
  iteration: "251025-2"
  generated_at: "2025-01-25 15:30:00"

summary:
  objective: "恢复全局添加任务按钮功能，实现 Reddit 风格的 FloatingActionButton"
  requirements: 
    - "需求1: 在 ResponsiveNavigation 中添加全局 FloatingActionButton"
    - "需求2: 实现 Reddit 风格的圆角设计 (borderRadius: 16)"
    - "需求3: 设置居中 docked 位置 (FloatingActionButtonLocation.centerDocked)"
    - "需求4: 配置点击事件调用创建任务弹窗"
    - "需求5: 确保在横屏和竖屏模式下都能正常显示"

# 组件设计状态说明
component_design_states:
  description: "FloatingActionButton 在不同屏幕方向下的显示状态"
  
  states:
    - name: "竖屏模式"
      description: "手机竖屏时，FAB 显示在底部导航栏上方居中位置"
      trigger: "MediaQuery.of(context).orientation == Orientation.portrait"
      properties:
        - name: "位置"
          type: "FloatingActionButtonLocation.centerDocked"
          description: "居中 docked 位置，在底部导航栏上方"
        - name: "样式"
          type: "FloatingActionButton"
          description: "Reddit 风格圆角按钮"
        - name: "用户体验"
          type: "单手操作优化"
          description: "拇指最容易到达的位置"
      use_case: "用户快速添加任务"
    
    - name: "横屏模式"
      description: "手机横屏时，FAB 集成到侧边栏内部，作为最后一个菜单项"
      trigger: "MediaQuery.of(context).orientation == Orientation.landscape"
      properties:
        - name: "位置"
          type: "DrawerMenu 内部"
          description: "集成到侧边栏最底部，作为特殊菜单项"
        - name: "样式"
          type: "FloatingActionButton"
          description: "Reddit 风格圆角按钮，悬浮突出效果"
        - name: "用户体验"
          type: "侧边栏集成"
          description: "与侧边栏保持近距离，但通过悬浮效果突出显示"
      use_case: "用户快速添加任务"
  
  state_transitions:
    description: "屏幕方向切换时的 FAB 位置调整"
    transitions:
      - from: "竖屏模式"
        to: "横屏模式"
        trigger: "屏幕旋转到横屏"
        condition: "MediaQuery.of(context).orientation == Orientation.landscape"
      - from: "横屏模式"
        to: "竖屏模式"
        trigger: "屏幕旋转到竖屏"
        condition: "MediaQuery.of(context).orientation == Orientation.portrait"

# 修改文件详细差异
modified_files:
  - file: "lib/presentation/navigation/responsive_navigation.dart"
    type: "StatefulWidget"
    class_name: "ResponsiveNavigation"
    description: "响应式导航组件，添加全局 FloatingActionButton"
    
    # 当前结构
    current_structure:
      - "Scaffold with body and bottomNavigationBar"
      - "Row layout for landscape mode with DrawerMenu"
      - "No floatingActionButton configuration"
    
    # 新结构
    new_structure:
      - "Scaffold with body, bottomNavigationBar, and floatingActionButton (portrait only)"
      - "Row layout for landscape mode with DrawerMenu (integrated FAB)"
      - "Reddit 风格的圆角 FloatingActionButton"
      - "竖屏：居中 docked 位置，横屏：集成到侧边栏内部"
    
    # 属性变更
    properties_changes:
      - name: "floatingActionButton"
        type: "FloatingActionButton"
        description: "全局添加任务按钮，根据屏幕方向调整位置"
        required: true
        change_type: "新增"
        implementation: |
          FloatingActionButton(
            onPressed: () => _showCreateTaskDialog(context),
            child: const Icon(Icons.add),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(16), // Reddit 风格圆角
            ),
            backgroundColor: Theme.of(context).colorScheme.primary,
            foregroundColor: Theme.of(context).colorScheme.onPrimary,
          )
      
      - name: "floatingActionButtonLocation"
        type: "FloatingActionButtonLocation"
        description: "FAB 位置配置，竖屏居中，横屏集成到侧边栏"
        required: true
        change_type: "新增"
        implementation: |
          // 根据屏幕方向动态设置位置
          MediaQuery.of(context).orientation == Orientation.portrait
              ? FloatingActionButtonLocation.centerDocked  // 竖屏：居中 docked
              : null  // 横屏：集成到 DrawerMenu 内部，不使用 Scaffold 的 FAB
    
    # 实现变更
    implementation_changes:
      - field: "Scaffold 配置"
        current: "只有 body 和 bottomNavigationBar"
        new: "添加 floatingActionButton 和动态 floatingActionButtonLocation"
        reason: "实现全局添加任务功能，根据屏幕方向优化位置"
      
      - field: "方法添加"
        current: "无创建任务弹窗方法"
        new: "添加 _showCreateTaskDialog 方法"
        reason: "处理 FAB 点击事件"
      
      - field: "响应式位置"
        current: "无位置适配"
        new: "竖屏居中 docked，横屏右下角浮动"
        reason: "优化不同屏幕方向下的用户体验"
    
    # 调用关系
    called_by:
      - "lib/presentation/navigation/app_shell.dart"
    
    calls:
      - "lib/presentation/widgets/create_task_dialog.dart"

  - file: "lib/presentation/navigation/drawer_menu.dart"
    type: "StatelessWidget"
    class_name: "DrawerMenu"
    description: "抽屉菜单组件，横屏模式下集成 FAB 作为最后一个菜单项"
    
    # 当前结构
    current_structure:
      - "ListView with NavigationDestinations"
      - "IconOnlyLayout and FullLayout modes"
      - "No integrated FAB"
    
    # 新结构
    new_structure:
      - "ListView with NavigationDestinations + integrated FAB"
      - "FAB 作为最后一个菜单项，悬浮突出效果"
      - "横屏模式下的特殊 FAB 样式"
    
    # 属性变更
    properties_changes:
      - name: "integratedFAB"
        type: "FloatingActionButton"
        description: "横屏模式下集成到侧边栏的 FAB"
        required: false
        change_type: "新增"
        implementation: |
          // 在横屏模式下，在 ListView 底部添加 FAB
          if (MediaQuery.of(context).orientation == Orientation.landscape)
            FloatingActionButton(
              onPressed: () => _showCreateTaskDialog(context),
              child: const Icon(Icons.add),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(16), // Reddit 风格圆角
              ),
              backgroundColor: Theme.of(context).colorScheme.primary,
              foregroundColor: Theme.of(context).colorScheme.onPrimary,
              elevation: 4, // 悬浮突出效果
            )
    
    # 实现变更
    implementation_changes:
      - field: "ListView 结构"
        current: "只有 NavigationDestinations"
        new: "NavigationDestinations + 集成 FAB（横屏模式）"
        reason: "在侧边栏内部提供添加任务功能"
      
      - field: "FAB 样式"
        current: "无"
        new: "悬浮突出效果，与其他菜单项区分"
        reason: "突出显示添加任务功能"

# 架构文档更新
architecture_updates:
  - file: "documents/architecture/widgets/responsive_navigation.yaml"
    changes:
      - field: "floatingActionButton"
        current_value: "无"
        new_value: "Reddit 风格的圆角 FAB"
        purpose: "记录全局添加任务按钮"
        reason: "恢复添加任务功能"
      
      - field: "floatingActionButtonLocation"
        current_value: "无"
        new_value: "FloatingActionButtonLocation.centerDocked"
        purpose: "记录 FAB 位置配置"
        reason: "居中 docked 位置符合移动端最佳实践"

# 测试策略
testing_strategy:
  unit_tests:
    description: "测试 ResponsiveNavigation 组件的 FAB 功能"
    coverage_target: "≥80%"
    test_files:
      - "test/presentation/navigation/responsive_navigation_test.dart"
  
  widget_tests:
    description: "测试 FAB 的显示、点击和样式"
    test_files:
      - "test/presentation/navigation/responsive_navigation_test.dart"
  
  integration_tests:
    description: "测试 FAB 与创建任务弹窗的集成"
    test_files:
      - "test/presentation/navigation/responsive_navigation_test.dart"

# 成功标准
success_criteria:
  - "FloatingActionButton 在竖屏模式下显示在底部导航栏上方居中位置"
  - "FloatingActionButton 在横屏模式下集成到侧边栏内部，作为最后一个菜单项"
  - "横屏模式下的 FAB 具有悬浮突出效果，与其他菜单项区分"
  - "FAB 点击后能正确打开创建任务弹窗"
  - "FAB 样式符合 Reddit 风格（圆角 16px）"
  - "FAB 位置根据屏幕方向动态调整（竖屏居中 docked，横屏集成到侧边栏）"
  - "所有测试通过（单元测试、组件测试、集成测试）"
  - "代码覆盖率 ≥80%"
  - "通过 flutter analyze 检查"
  - "功能完整实现且用户体验良好"
  - "屏幕方向切换时 FAB 位置平滑过渡"
