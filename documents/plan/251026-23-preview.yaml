# Tasks页面滑动操作调整 Preview

## 项目信息
- **项目名称**: GranoFlow Tasks页面滑动操作调整
- **版本**: 1.0
- **创建日期**: 2025-01-26
- **负责人**: AI Assistant
- **优先级**: 中

## 目标
调整Tasks页面的滑动操作，使其更适合任务管理场景：左滑归档，右滑推迟，避免直接删除任务。

## 问题分析

### 当前状态
- **Inbox页面**: 左滑删除，右滑规划到今日 ✅（保持不变）
- **Tasks页面**: 左滑删除，右滑归档 ❌（需要调整）

### 问题分析
1. **Tasks页面直接删除任务不合适**
   - 任务管理场景中，直接删除任务风险较高
   - 用户可能误删重要任务
   - 归档比删除更安全，可以恢复

2. **操作层次不清晰**
   - 删除是最终操作，不可逆
   - 归档是状态管理，可恢复
   - 推迟是时间管理，更常见

## 解决方案

### 调整后的设计

| 页面 | 左滑操作 | 右滑操作 | 设计理念 |
|------|----------|----------|----------|
| **Inbox** | 删除到回收站 | 快速规划到今日 | 收集箱：快速决策 |
| **Tasks** | 归档 | 推迟 | 任务管理：状态调整 |

### 设计优势

1. **安全性提升**
   - Tasks页面不直接删除任务
   - 归档操作可以恢复
   - 降低误操作风险

2. **操作层次清晰**
   - 归档：任务状态管理
   - 推迟：时间管理
   - 删除：最终清理（仅在Inbox）

3. **使用场景匹配**
   - Inbox：快速收集和决策
   - Tasks：任务状态和时间管理

## 技术实现

### 修改文件列表
1. `lib/presentation/widgets/swipe_configs.dart`
   - 更新Tasks页面配置：左滑归档，右滑推迟
   - 调整图标和颜色配置

2. `lib/presentation/tasks/task_list_page.dart`
   - 更新滑动回调：左滑归档，右滑推迟

### 核心修改

#### 1. SwipeConfigs配置更新
```dart
/// Tasks页面的滑动配置
/// 左滑：归档任务（相对安全操作），右滑：智能推迟（相对安全操作）
static const SwipeActionConfig tasksConfig = SwipeActionConfig(
  leftAction: SwipeActionType.archive,     // 改回归档
  rightAction: SwipeActionType.postpone,   // 改回推迟
  leftHintKey: 'taskArchiveAction',        // 改回归档
  rightHintKey: 'taskPostponeAction',      // 改回推迟
  leftIcon: Icons.archive,                 // 改回归档图标
  rightIcon: Icons.schedule,               // 改回推迟图标
  leftColor: Colors.orange,                // 归档用橙色
  rightColor: Colors.green,                // 推迟用绿色
);
```

#### 2. 页面回调更新
```dart
// Tasks页面滑动回调
onLeftAction: (task) => SwipeActionHandler.handleAction(context, ref, SwipeActionType.archive, task),
onRightAction: (task) => SwipeActionHandler.handleAction(context, ref, SwipeActionType.postpone, task),
```

## 用户体验改进

### 操作安全性
- **Tasks页面**: 不直接删除任务，通过归档管理
- **Inbox页面**: 保持快速删除功能
- **操作层次**: 归档 > 推迟 > 删除

### 使用场景匹配
- **Inbox**: 快速收集和初步决策
- **Tasks**: 详细的任务状态和时间管理
- **操作频率**: 推迟 > 归档 > 删除

### 视觉反馈
- **归档**: 橙色图标，表示状态变更
- **推迟**: 绿色图标，表示时间调整
- **删除**: 红色图标，表示危险操作

## 测试策略

### 单元测试
- 验证SwipeConfigs配置的正确性
- 测试滑动回调的正确映射
- 验证图标和颜色的配置

### 集成测试
- 测试完整的滑动操作流程
- 验证Tasks页面的滑动行为
- 测试与Inbox页面的区别

### 用户体验测试
- 验证操作的安全性提升
- 测试使用场景的匹配度
- 验证操作层次的一致性

## 成功标准

### 功能标准
- [ ] Tasks页面左滑执行归档操作
- [ ] Tasks页面右滑执行推迟操作
- [ ] Inbox页面保持原有操作不变
- [ ] 所有操作正确映射到SwipeActionHandler

### 体验标准
- [ ] Tasks页面不直接删除任务
- [ ] 操作层次清晰合理
- [ ] 使用场景匹配度高
- [ ] 视觉反馈直观明确

### 技术标准
- [ ] 所有测试通过
- [ ] 代码质量符合项目标准
- [ ] 配置参数正确
- [ ] 性能无明显影响

## 风险评估

### 低风险
- 配置参数调整
- 回调函数更新
- 图标和颜色修改

### 中风险
- 用户操作习惯改变
- 操作流程调整

### 缓解措施
- 充分的测试覆盖
- 用户反馈收集
- 渐进式功能部署

## 时间计划

### 阶段1: 核心修改 (0.5天)
- 修改SwipeConfigs配置
- 更新Tasks页面回调

### 阶段2: 测试验证 (0.5天)
- 运行单元测试
- 验证集成测试
- 静态分析检查

### 阶段3: 文档更新 (0.5天)
- 更新相关文档
- 记录修改内容
- 代码审查

## 总结

本次调整将Tasks页面的滑动操作调整为更适合任务管理场景的设计：左滑归档，右滑推迟。这种设计避免了直接删除任务的风险，提供了更安全的操作层次，同时保持了与Inbox页面的差异化设计。调整后的设计更符合任务管理的使用场景，提升了整体用户体验。
