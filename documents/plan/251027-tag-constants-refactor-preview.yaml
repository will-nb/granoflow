meta:
  version: 1
  type: preview
  iteration: "251027-tag-constants-refactor"
  generated_at: "2025-10-27 18:30:00"

summary:
  objective: "重构标签配置系统，将标签定义迁移到 app_constants.dart，清理废弃代码，统一标签前缀处理"
  requirements: 
    - "需求1: 创建 app_constants.dart 存放所有应用级常量（包括标签定义）"
    - "需求2: 删除 SeedTag 相关废弃代码（类定义、字段、参数）"
    - "需求3: 简化 tag_config_service.dart，从 AppConstants 读取配置"
    - "需求4: 修复 tag_data.dart 中的前缀重复问题（slug 已包含前缀，不应再添加）"
    - "需求5: 删除测试文件中对 localizedLabels 的错误使用"

# 设计原则
design_principles:
  description: "标签系统重构的核心原则"
  
  principles:
    - principle: "单一数据源"
      explanation: "标签定义在 AppConstants 中唯一定义，所有代码从此处读取"
      benefit: "避免多处定义导致的不一致"
      
    - principle: "前缀是标识符的一部分"
      explanation: "slug 包含 @ 或 # 前缀，这是业务规则和数据标识的一部分"
      benefit: "保持数据一致性，简化查询和类型判断逻辑"
      
    - principle: "翻译通过 ARB 文件"
      explanation: "标签的显示文本通过 Flutter 国际化系统（ARB 文件）提供"
      benefit: "符合 Flutter 最佳实践，支持多语言"
      
    - principle: "职责分离"
      explanation: "AppConstants（常量）、AppConfig（运行时配置）、ConfigKeys（环境变量）职责清晰"
      benefit: "易于维护和查找"

# 新建文件详细设计
new_files:
  - file: "lib/core/config/app_constants.dart"
    type: "static_class"
    class_name: "AppConstants"
    description: "应用级常量定义，包含标签配置、默认值、限制等"
    
    classes:
      - name: "AppConstants"
        type: "const_class"
        description: "应用常量容器类"
        properties:
          - name: "tags"
            type: "List<TagDefinition>"
            modifier: "static const"
            description: "所有标签定义（包含前缀）"
            value: |
              [
                // Context tags - @ 前缀
                TagDefinition(slug: '@anywhere', kind: TagKind.context, translationKey: 'tag_anywhere'),
                TagDefinition(slug: '@home', kind: TagKind.context, translationKey: 'tag_home'),
                TagDefinition(slug: '@workplace', kind: TagKind.context, translationKey: 'tag_workplace'),
                TagDefinition(slug: '@local', kind: TagKind.context, translationKey: 'tag_local'),
                TagDefinition(slug: '@travel', kind: TagKind.context, translationKey: 'tag_travel'),
                
                // Urgency tags - # 前缀
                TagDefinition(slug: '#urgent', kind: TagKind.urgency, translationKey: 'tag_urgent'),
                TagDefinition(slug: '#not_urgent', kind: TagKind.urgency, translationKey: 'tag_not_urgent'),
                
                // Importance tags - # 前缀
                TagDefinition(slug: '#important', kind: TagKind.importance, translationKey: 'tag_important'),
                TagDefinition(slug: '#not_important', kind: TagKind.importance, translationKey: 'tag_not_important'),
                
                // Special tags
                TagDefinition(slug: '#waiting', kind: TagKind.special, translationKey: 'tag_waiting'),
                TagDefinition(slug: 'wasted', kind: TagKind.special, translationKey: 'tag_wasted'),
              ]
      
      - name: "TagDefinition"
        type: "immutable_class"
        description: "标签定义数据类"
        annotation: "@immutable"
        properties:
          - name: "slug"
            type: "String"
            required: true
            final: true
            description: "标签唯一标识符（包含 @ 或 # 前缀）"
          
          - name: "kind"
            type: "TagKind"
            required: true
            final: true
            description: "标签类型（context、urgency、importance、special）"
          
          - name: "translationKey"
            type: "String"
            required: true
            final: true
            description: "ARB 文件中的翻译键（如 tag_home）"
        
        methods:
          - name: "toString"
            return_type: "String"
            override: true
          
          - name: "operator =="
            return_type: "bool"
            override: true
          
          - name: "hashCode"
            return_type: "int"
            override: true
    
    dependencies:
      - "package:flutter/foundation.dart"
      - "../../data/models/tag.dart"
    
    called_by:
      - "lib/core/services/tag_config_service.dart"
      - "lib/data/repositories/tag_repository.dart"

# 删除文件
deleted_files_detail:
  - file: "lib/core/services/tag_config_service.dart"
    reason: "标签配置已迁移到 AppConstants，此服务类已废弃"
    description: "包含 TagConfigService 单例类和 TagConfig 数据类，共95行代码"
    replaced_by: "lib/core/config/app_constants.dart"
    migration_note: "所有使用 TagConfigService 的地方改为直接访问 AppConstants.tags"

# 修改文件详细差异
modified_files:
  # 文件1: tag_repository.dart - 直接使用 AppConstants
  - file: "lib/data/repositories/tag_repository.dart"
    type: "repository"
    class_name: "IsarTagRepository"
    description: "直接从 AppConstants 读取标签配置，移除对 TagConfigService 的依赖"
    
    removed_imports:
      - "import '../../core/services/tag_config_service.dart';"
    
    added_imports:
      - "import '../../core/config/app_constants.dart';"
    
    implementation_changes:
      - field: "initializeTags 方法（第26-30行）"
        current: |
          @override
          Future<void> initializeTags() async {
            debugPrint('TagRepository.initializeTags: Loading tags from config...');
            
            final configService = TagConfigService.instance;
            final tagConfigs = await configService.getTags();
            
            debugPrint('TagRepository.initializeTags: Found ${tagConfigs.length} tag configs');
        new: |
          @override
          Future<void> initializeTags() async {
            debugPrint('TagRepository.initializeTags: Loading tags from config...');
            
            // 直接从 AppConstants 读取（同步、零开销）
            final tagConfigs = AppConstants.tags;
            
            debugPrint('TagRepository.initializeTags: Found ${tagConfigs.length} tag configs');
        reason: "直接使用常量，无需单例和异步调用"

  # 文件2: seed_repository.dart - 删除 SeedTag 相关代码
  - file: "lib/data/repositories/seed_repository.dart"
    type: "repository"
    class_name: "SeedRepository & IsarSeedRepository"
    description: "删除已废弃的 SeedTag 类和相关字段"
    
    removed_classes:
      - name: "SeedTag"
        lines: "27-33"
        reason: "标签不再从种子数据加载，此类已废弃"
        code: |
          class SeedTag {
            const SeedTag({required this.slug, required this.kind, required this.labels});
            final String slug;
            final TagKind kind;
            final Map<String, String> labels;
          }
    
    removed_properties:
      - name: "SeedPayload.tags"
        type: "List<SeedTag>"
        lines: "21"
        reason: "标签通过 AppConstants 定义，不从种子数据加载"
    
    implementation_changes:
      - field: "SeedPayload 构造函数"
        current: |
          const SeedPayload({
            required this.version,
            required this.tags,
            required this.tasks,
            required this.templates,
            required this.inboxItems,
          });
          
          final String version;
          final List<SeedTag> tags;
          final List<SeedTask> tasks;
        new: |
          const SeedPayload({
            required this.version,
            required this.tasks,
            required this.templates,
            required this.inboxItems,
          });
          
          final String version;
          final List<SeedTask> tasks;
        reason: "移除 tags 字段"
      
      - field: "_loadFromAssets 方法（约第155行）"
        current: |
          return SeedPayload(
            version: versionJson['version'] as String,
            tags: const [], // 标签现在通过配置文件初始化，不再从种子数据加载
            tasks: (tasksJson['tasks'] as List<dynamic>)
        new: |
          return SeedPayload(
            version: versionJson['version'] as String,
            tasks: (tasksJson['tasks'] as List<dynamic>)
        reason: "移除 tags 参数"

  # 文件3: seed_import_service.dart - 移除对 SeedTag 的引用
  - file: "lib/core/services/seed_import_service.dart"
    type: "service"
    class_name: "SeedImportService"
    description: "移除对 payload.tags 的引用"
    
    implementation_changes:
      - field: "导入日志（约第44行）"
        current: |
          debugPrint('SeedImportService: Tags count=${payload.tags.length}');
        new: |
          // 移除此行，因为 payload.tags 已不存在
        reason: "tags 字段已删除"

  # 文件4: tag_data.dart - 不需要修改
  - file: "lib/presentation/widgets/tag_data.dart"
    type: "immutable_class"
    class_name: "TagData"
    description: "保持不变，ARB 文件已包含前缀，label 将直接从 ARB 获取完整文本"
    
    no_changes_needed: true
    reason: "ARB 文件直接包含前缀（如 'tag_home': '@家里'），tag.labelForLocale() 返回的就是完整文本，现有逻辑无需修改"
    
    current_flow:
      - "tag.labelForLocale('zh_CN') → '@家里'（从 ARB 获取）"
      - "TagData.fromTag() → label='@家里'"
      - "ModernTag 显示 → prefix != null ? '$prefix$label' : label"
      - "由于 label='@家里' 已包含前缀，且 prefix 应该为空，直接显示 label 即可"
    
    note: "需要确认 _getTagStyle 返回的 prefix 是否为 null，如果不是 null，需要修改为返回 null"

  # 文件5: modern_tag.dart - 不需要修改
  - file: "lib/presentation/widgets/modern_tag.dart"
    type: "StatelessWidget"
    class_name: "ModernTag"
    description: "保持不变，label 已包含前缀"
    
    no_changes_needed: true
    reason: "ARB 文件直接包含前缀，label 已经是完整文本（如 '@家里'），现有显示逻辑无需修改"
    
    current_display_logic: |
      Text(
        prefix != null ? '$prefix$label' : label,
        // ...
      )
    
    note: "如果 prefix 为 null，则直接显示 label（'@家里'），符合预期"

# 标签显示方案决策
tag_display_strategy:
  description: "标签在 UI 中的显示方式决策"
  
  final_decision:
    choice: "方案C（ARB 文件直接包含前缀）"
    reason: "实现最简单，翻译者能看到完整显示效果，符合 Flutter 国际化实践"
    
  implementation:
    description: "ARB 文件直接包含前缀，代码零修改"
    
    arb_file_changes:
      - file: "lib/l10n/app_en.arb"
        changes:
          - key: "tag_anywhere"
            old: "Anywhere"
            new: "@Anywhere"
          - key: "tag_home"
            old: "Home"
            new: "@Home"
          - key: "tag_workplace"
            old: "Workplace"
            new: "@Workplace"
          - key: "tag_local"
            old: "Local"
            new: "@Local"
          - key: "tag_travel"
            old: "Travel"
            new: "@Travel"
          - key: "tag_urgent"
            old: "Urgent"
            new: "#Urgent"
          - key: "tag_not_urgent"
            old: "Not Urgent"
            new: "#Not Urgent"
          - key: "tag_important"
            old: "Important"
            new: "#Important"
          - key: "tag_not_important"
            old: "Not Important"
            new: "#Not Important"
          - key: "tag_waiting"
            old: "Waiting"
            new: "#Waiting"
      
      - file: "lib/l10n/app_zh_CN.arb"
        changes:
          - key: "tag_anywhere"
            old: "任何地点"
            new: "@任何地点"
          - key: "tag_home"
            old: "家里"
            new: "@家里"
          - key: "tag_workplace"
            old: "工作场所"
            new: "@工作场所"
          - key: "tag_local"
            old: "本地"
            new: "@本地"
          - key: "tag_travel"
            old: "旅行"
            new: "@旅行"
          - key: "tag_urgent"
            old: "紧急"
            new: "#紧急"
          - key: "tag_not_urgent"
            old: "不紧急"
            new: "#不紧急"
          - key: "tag_important"
            old: "重要"
            new: "#重要"
          - key: "tag_not_important"
            old: "不重要"
            new: "#不重要"
          - key: "tag_waiting"
            old: "等待"
            new: "#等待"
      
      - file: "lib/l10n/app_zh.arb"
        changes:
          - key: "tag_anywhere"
            old: "任何地點"
            new: "@任何地點"
          - key: "tag_home"
            old: "屋企"
            new: "@屋企"
          - key: "tag_workplace"
            old: "工作場所"
            new: "@工作場所"
          - key: "tag_local"
            old: "本地"
            new: "@本地"
          - key: "tag_travel"
            old: "旅行"
            new: "@旅行"
          - key: "tag_urgent"
            old: "緊急"
            new: "#緊急"
          - key: "tag_not_urgent"
            old: "唔緊急"
            new: "#唔緊急"
          - key: "tag_important"
            old: "重要"
            new: "#重要"
          - key: "tag_not_important"
            old: "唔重要"
            new: "#唔重要"
          - key: "tag_waiting"
            old: "等緊"
            new: "#等緊"
      
      - file: "lib/l10n/app_zh_HK.arb"
        changes:
          - key: "tag_anywhere"
            old: "任何地點"
            new: "@任何地點"
          - key: "tag_home"
            old: "屋企"
            new: "@屋企"
          - key: "tag_workplace"
            old: "工作場所"
            new: "@工作場所"
          - key: "tag_local"
            old: "本地"
            new: "@本地"
          - key: "tag_travel"
            old: "旅行"
            new: "@旅行"
          - key: "tag_urgent"
            old: "緊急"
            new: "#緊急"
          - key: "tag_not_urgent"
            old: "唔緊急"
            new: "#唔緊急"
          - key: "tag_important"
            old: "重要"
            new: "#重要"
          - key: "tag_not_important"
            old: "唔重要"
            new: "#唔重要"
          - key: "tag_waiting"
            old: "等緊"
            new: "#等緊"
    
    code_changes:
      description: "无需修改代码"
      reason: "tag.labelForLocale() 返回的就是完整文本（如 '@家里'），现有逻辑已支持"
    
    flow:
      - step: "ARB 文件"
        value: "tag_home: '@家里'"
        description: "翻译文件直接包含前缀"
      
      - step: "Tag.labelForLocale('zh_CN')"
        value: "'@家里'"
        description: "从 ARB 获取完整翻译"
      
      - step: "TagData.fromTag()"
        value: "label='@家里', prefix=null"
        description: "直接使用 label"
      
      - step: "ModernTag 显示"
        value: "prefix != null ? '$prefix$label' : label → '@家里'"
        description: "prefix 为 null，直接显示 label"
    
    advantages:
      - "代码零修改（除了 ARB 文件）"
      - "翻译者能看到最终显示效果"
      - "所有语言的前缀在 ARB 中统一管理"
      - "符合 Flutter 国际化标准实践"
      - "性能最优（无需拼接）"

# 测试文件修改
test_file_changes:
  - file: "test/presentation/widgets/tag_data_test.dart"
    changes:
      - description: "移除 localizedLabels 的使用"
        reason: "Tag 模型中 localizedLabels 现在为空，翻译通过 ARB 处理"
        current: |
          final tag = Tag(
            id: 1,
            slug: '@home',
            kind: TagKind.context,
            localizedLabels: {'en': 'Home', 'zh_CN': '家'},
          );
        new: |
          final tag = Tag(
            id: 1,
            slug: '@home',
            kind: TagKind.context,
            localizedLabels: const {},  // 空的，不再使用
          );
        note: "测试需要 mock AppLocalizations 来获取翻译"

# 删除文件列表
deleted_files:
  description: "需要删除的废弃文件"
  
  files:
    - file: "documents/config/tags.yaml"
      reason: "标签配置已迁移到 app_constants.dart，此文件已废弃"
      note: "仅作为文档保留或完全删除"

# 影响范围分析
impact_analysis:
  files_modified: 5
  files_added: 1
  files_deleted: 0
  classes_removed: 2
  
  affected_components:
    - component: "标签配置系统"
      impact: "完全重构"
      risk: "中"
      
    - component: "种子数据加载"
      impact: "移除 tags 相关代码"
      risk: "低（已不使用）"
      
    - component: "标签显示"
      impact: "修复前缀重复问题"
      risk: "低（改进）"
  
  breaking_changes:
    - change: "TagConfig → TagDefinition"
      affected: "所有使用 TagConfigService 的代码"
      mitigation: "类型相似，主要是重命名"
    
    - change: "TagData.prefix 语义变化"
      affected: "ModernTag 显示逻辑"
      mitigation: "已在同一次变更中修复"

# 测试策略
testing_strategy:
  unit_tests:
    description: "单元测试更新"
    changes:
      - "更新 tag_data_test.dart 移除 localizedLabels 依赖"
      - "为 AppConstants 添加测试（可选）"
    
  integration_tests:
    description: "集成测试验证"
    scenarios:
      - "标签在 Inbox 和 Tasks 页面正确显示（无重复前缀）"
      - "标签筛选功能正常工作"
      - "标签编辑功能正常工作"
  
  manual_tests:
    description: "手动验证"
    test_cases:
      - case: "Inbox 筛选标签显示"
        steps:
          - "打开 Inbox 页面"
          - "查看上下文标签（@家、@工作场所等）"
          - "查看优先级标签（#紧急、#重要等）"
        expected: "标签显示为 '@家'、'#紧急'，没有重复前缀"
      
      - case: "Tasks 展开面板标签"
        steps:
          - "展开任一任务"
          - "查看标签选择器"
        expected: "标签显示正确，选中时样式正常"

# 成功标准
success_criteria:
  - criterion: "AppConstants.tags 成功创建"
    verification: "包含所有11个标签定义（5个上下文、2个紧急度、2个重要度、2个特殊）"
    
  - criterion: "TagConfigService 完全删除"
    verification: "lib/core/services/tag_config_service.dart 文件不存在"
    
  - criterion: "tag_repository.dart 更新完成"
    verification: "直接使用 AppConstants.tags，无 TagConfigService 导入"
    
  - criterion: "SeedTag 相关代码完全删除"
    verification: "SeedTag 类、SeedPayload.tags 字段、相关引用全部移除"
    
  - criterion: "ARB 文件包含前缀"
    verification: "所有标签翻译包含 @ 或 # 前缀（如 '@家里'、'#紧急'）"
    
  - criterion: "标签显示无前缀重复"
    verification: "UI 显示为 '@家里'、'#紧急'，而非 '@@家里'、'##紧急'"
    
  - criterion: "所有测试通过"
    verification: "flutter test 无失败"
    
  - criterion: "静态分析无错误"
    verification: "flutter analyze 无 error"
    
  - criterion: "手动测试通过"
    verification: "Inbox 和 Tasks 页面标签显示和筛选功能正常"

# 注意事项
notes:
  - note: "前缀是标识符的一部分"
    description: "slug 必须包含 @ 或 # 前缀，这是系统设计的核心约定"
    
  - note: "翻译文件保持纯文本"
    description: "ARB 文件中的翻译不应包含前缀（tag_home='家'，而非 '@家'）"
    
  - note: "前缀拼接逻辑"
    description: "在 TagData.fromTag 中从 slug 提取前缀并拼接到 label"
    
  - note: "向后兼容"
    description: "ModernTag.prefix 参数可以保留但不使用，避免破坏性变更"

# 迁移步骤
migration_steps:
  phase_1:
    name: "创建 AppConstants"
    tasks:
      - "创建 lib/core/config/app_constants.dart"
      - "定义 TagDefinition 类"
      - "定义 AppConstants.tags 列表（11个标签）"
  
  phase_2:
    name: "更新 tag_repository.dart"
    tasks:
      - "移除导入：import '../../core/services/tag_config_service.dart'"
      - "添加导入：import '../../core/config/app_constants.dart'"
      - "修改 initializeTags() 方法直接使用 AppConstants.tags"
  
  phase_3:
    name: "删除 TagConfigService"
    tasks:
      - "删除文件 lib/core/services/tag_config_service.dart"
  
  phase_4:
    name: "清理种子数据代码"
    tasks:
      - "删除 lib/data/repositories/seed_repository.dart 中的 SeedTag 类（第27-33行）"
      - "删除 SeedPayload.tags 字段（第21行）"
      - "更新 SeedPayload 构造函数（第14行）"
      - "更新 _loadFromAssets 方法移除 tags 参数（约第155行）"
      - "移除 lib/core/services/seed_import_service.dart 中对 payload.tags 的引用（约第44行）"
  
  phase_5:
    name: "更新 ARB 文件（添加前缀）"
    tasks:
      - "更新 lib/l10n/app_en.arb（10个标签键）"
      - "更新 lib/l10n/app_zh_CN.arb（10个标签键）"
      - "更新 lib/l10n/app_zh.arb（10个标签键）"
      - "更新 lib/l10n/app_zh_HK.arb（10个标签键）"
      - "运行 flutter gen-l10n 重新生成"
  
  phase_6:
    name: "验证和测试"
    tasks:
      - "运行 flutter analyze（确保无错误）"
      - "运行 flutter test（确保所有测试通过）"
      - "手动测试 Inbox 页面标签显示"
      - "手动测试 Tasks 页面标签编辑"
      - "确认标签显示为 '@家里'、'#紧急' 等（无重复前缀）"

