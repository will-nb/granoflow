title: "TaskId生成规则优化"
date: "2025-10-26"
version: "1.0"

problem:
  description: "当前taskId生成规则不符合设计规范，且存在格式不一致的问题"
  current_issues:
    - "当前格式：YYYYMMDD-XXXX（如：20251026-1234）"
    - "原始设计：YYMMDDHHIISS（12位纯数字）"
    - "使用随机数后缀，存在冲突风险"
    - "缺少防冲突机制"
    - "格式不统一，影响用户体验"
  impact:
    - "用户无法通过taskId快速识别任务创建时间"
    - "随机后缀无法保证唯一性"
    - "格式不一致影响数据同步和追溯"
    - "不符合产品设计规范"

solution:
  approach: "实现基于日期的自增taskId生成规则"
  
  design_strategy:
    - "格式：YYYYMMDD-XXXX（8位日期 + 4位自增数字）"
    - "每天从0001开始自增"
    - "基于Isar数据库查询最新任务"
    - "自动处理跨天重置"
    - "完善的错误处理机制"
  
  new_format:
    pattern: "YYYYMMDD-XXXX"
    examples:
      - "20251026-0001" # 今天第一个任务
      - "20251026-0002" # 今天第二个任务
      - "20251027-0001" # 明天第一个任务
      - "20251028-0001" # 后天第一个任务
  
  generation_logic:
    - "查询数据库中最新创建的task"
    - "解析其taskId的日期部分"
    - "如果日期是今天 → 后缀+1"
    - "如果日期不是今天 → 后缀从0001开始"
    - "如果解析失败 → 从0001开始"

technical_changes:
  files_to_modify:
    - "lib/data/repositories/task_repository.dart"
  
  implementation_details:
    modified_methods:
      - "_generateTaskId() - 重写ID生成逻辑"
    
    new_methods:
      - "_getLatestTask() - 查询最新任务"
      - "_parseTaskId() - 解析taskId格式"
    
    error_handling:
      - "空数据库处理"
      - "格式不匹配处理"
      - "数据损坏处理"
      - "解析异常处理"
      - "数据库查询异常处理"

user_experience:
  benefits:
    - "taskId格式统一，易于识别"
    - "日期部分一目了然，便于追溯"
    - "自增后缀避免冲突"
    - "每天重置，保持简洁"
    - "向后兼容，不影响现有数据"
  
  user_flow:
    - "用户创建新任务"
    - "系统查询最新任务ID"
    - "解析并生成新ID"
    - "任务保存到数据库"
    - "用户看到格式统一的taskId"

design_principles:
  - "简洁性：格式简单易懂"
  - "唯一性：避免ID冲突"
  - "可读性：日期部分清晰可见"
  - "稳定性：完善的错误处理"
  - "兼容性：不影响现有数据"

acceptance_criteria:
  functional:
    - "新任务使用YYYYMMDD-XXXX格式"
    - "每天从0001开始自增"
    - "跨天自动重置计数器"
    - "处理空数据库情况"
    - "处理格式不匹配情况"
    - "处理数据损坏情况"
    - "处理解析异常情况"
  
  performance:
    - "ID生成速度 < 100ms"
    - "数据库查询优化"
    - "错误处理不影响性能"
  
  compatibility:
    - "现有数据不受影响"
    - "新老格式共存"
    - "数据迁移无风险"

implementation_phases:
  phase_1:
    title: "实现新的ID生成逻辑"
    description: "重写_generateTaskId方法，实现基于日期的自增逻辑"
    changes:
      - "实现_getLatestTask方法"
      - "实现_parseTaskId方法"
      - "重写_generateTaskId方法"
      - "添加完善的错误处理"
  
  phase_2:
    title: "测试和验证"
    description: "测试各种边界情况和异常处理"
    changes:
      - "测试空数据库情况"
      - "测试格式不匹配情况"
      - "测试跨天重置功能"
      - "测试并发创建任务"
      - "测试异常处理机制"

testing:
  manual_tests:
    - "创建第一个任务，确认ID为YYYYMMDD-0001"
    - "创建第二个任务，确认ID为YYYYMMDD-0002"
    - "跨天创建任务，确认ID重置为0001"
    - "测试空数据库情况"
    - "测试格式不匹配的旧数据"
    - "测试并发创建任务"
    - "测试异常情况处理"
  
  edge_cases:
    - "数据库为空"
    - "最新任务ID格式错误"
    - "最新任务ID为空"
    - "最新任务ID只有日期部分"
    - "最新任务ID只有后缀部分"
    - "最新任务ID包含特殊字符"
    - "数据库查询异常"
    - "解析过程中异常"

rollback_plan:
  description: "如果出现问题，可以快速回滚到当前实现"
  steps:
    - "恢复原来的_generateTaskId方法"
    - "删除新增的辅助方法"
    - "清理相关代码"

success_metrics:
  - "新任务ID格式统一为YYYYMMDD-XXXX"
  - "每天从0001开始自增"
  - "跨天自动重置计数器"
  - "错误处理机制完善"
  - "性能影响最小化"
  - "现有数据不受影响"

technical_details:
  database_query:
    method: "按createdAt降序查询最新任务"
    optimization: "使用索引提高查询性能"
    fallback: "查询失败时从0001开始"
  
  id_parsing:
    format_validation: "检查YYYYMMDD-XXXX格式"
    date_extraction: "提取8位日期部分"
    suffix_extraction: "提取4位后缀部分"
    number_validation: "验证后缀为数字"
  
  error_handling:
    levels:
      - "数据库查询异常"
      - "数据解析异常"
      - "格式验证异常"
      - "数字转换异常"
    fallback: "所有异常都fallback到0001"
  
  performance_considerations:
    - "查询优化：只查询最新一条记录"
    - "缓存策略：避免重复查询"
    - "事务处理：在现有事务中执行"
    - "异常处理：不影响主流程性能"

migration_strategy:
  approach: "渐进式升级，不破坏现有数据"
  steps:
    - "新任务使用新格式"
    - "旧任务保持原格式"
    - "逐步迁移历史数据（可选）"
    - "监控格式分布情况"
  
  compatibility:
    - "支持新老格式共存"
    - "查询逻辑兼容两种格式"
    - "显示逻辑统一处理"
    - "导出功能支持两种格式"

ui_impact:
  display_changes:
    - "taskId显示格式统一"
    - "日期部分更易识别"
    - "后缀部分更简洁"
    - "整体可读性提升"
  
  user_benefits:
    - "快速识别任务创建日期"
    - "便于任务排序和查找"
    - "提高数据追溯能力"
    - "改善整体用户体验"
